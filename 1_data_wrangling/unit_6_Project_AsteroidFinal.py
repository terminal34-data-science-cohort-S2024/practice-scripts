{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Monitoring Near-Earth Asteroids using Data Science\n",
        "\n",
        "Purpose: The following notebook provides an interface to analyze near-earth asteriods using data from the NASA API. The following functions are meant to download, preprocess, and visualize asteroid data.\n",
        "\n",
        "Author: Jordan A. Caraballo-Vega\n",
        "\n",
        "Version: 2024.02.22\n",
        "\n",
        "## Import Python Libraries\n",
        "\n",
        "In this section we will import the necessary Python libraries."
      ],
      "metadata": {
        "id": "GMyTV8V174dY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import json\n",
        "import datetime\n",
        "import requests\n",
        "import pandas as pd"
      ],
      "metadata": {
        "id": "yDKHFTdZqLLZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GRyPDogR8rNC",
        "outputId": "2b1aa90c-5a2a-4acd-c449-6760960d0d30"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Fetch the Asteroid Data for a Single Date\n",
        "\n",
        "In this section we will download the asteroid data for a single date. First, we define general variables needed to obtain the asteroid data. To avoid exposing my API key, I assign it to a file and read from it."
      ],
      "metadata": {
        "id": "qGobcUX18ThF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "api_key = open('drive/MyDrive/Terminal34/nasa-api.txt', 'r').readline() # Replace with your NASA API key\n",
        "start_date = '2024-02-21' # Example date\n",
        "end_date = '2024-02-21' # Same as start_date for one day's data"
      ],
      "metadata": {
        "id": "BkBWVJSnqQFg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "url = 'https://api.nasa.gov/neo/rest/v1/feed?' + \\\n",
        "  f'start_date={start_date}&end_date={end_date}&api_key={api_key}'"
      ],
      "metadata": {
        "id": "sM60s6ZxqRq9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# use the requests library to generate the request for data download\n",
        "response = requests.get(url)\n",
        "print(response)\n",
        "\n",
        "if response.status_code == 200:\n",
        "  data = response.json()  # Parse JSON Data\n",
        "  print('Downloaded data correctly.')\n",
        "else:\n",
        "  print('Failed to retrieve data. Please check your API key and internet connection.')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QmUEJoxdqW5T",
        "outputId": "5a545991-26a7-4264-b64c-f1f01e82044d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<Response [200]>\n",
            "Downloaded data correctly.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z8TTYiJw-fwp",
        "outputId": "4f33ce20-6e10-4b59-e66a-a028586661a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'links': {'next': 'http://api.nasa.gov/neo/rest/v1/feed?start_date=2024-02-22&end_date=2024-02-22&detailed=false&api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV',\n",
              "  'prev': 'http://api.nasa.gov/neo/rest/v1/feed?start_date=2024-02-20&end_date=2024-02-20&detailed=false&api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV',\n",
              "  'self': 'http://api.nasa.gov/neo/rest/v1/feed?start_date=2024-02-21&end_date=2024-02-21&detailed=false&api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              " 'element_count': 14,\n",
              " 'near_earth_objects': {'2024-02-21': [{'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/2417264?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '2417264',\n",
              "    'neo_reference_id': '2417264',\n",
              "    'name': '417264 (2006 AT2)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=2417264',\n",
              "    'absolute_magnitude_h': 17.13,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.99667824,\n",
              "      'estimated_diameter_max': 2.2286402963},\n",
              "     'meters': {'estimated_diameter_min': 996.6782399685,\n",
              "      'estimated_diameter_max': 2228.6402962644},\n",
              "     'miles': {'estimated_diameter_min': 0.6193069546,\n",
              "      'estimated_diameter_max': 1.3848124495},\n",
              "     'feet': {'estimated_diameter_min': 3269.9418368182,\n",
              "      'estimated_diameter_max': 7311.8122295961}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 10:10',\n",
              "      'epoch_date_close_approach': 1708510200000,\n",
              "      'relative_velocity': {'kilometers_per_second': '15.3033181047',\n",
              "       'kilometers_per_hour': '55091.9451769682',\n",
              "       'miles_per_hour': '34231.9922684334'},\n",
              "      'miss_distance': {'astronomical': '0.1598481563',\n",
              "       'lunar': '62.1809328007',\n",
              "       'kilometers': '23912943.705907081',\n",
              "       'miles': '14858814.2064804778'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/3743897?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '3743897',\n",
              "    'neo_reference_id': '3743897',\n",
              "    'name': '(2016 CO246)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=3743897',\n",
              "    'absolute_magnitude_h': 25.8,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0183888672,\n",
              "      'estimated_diameter_max': 0.0411187571},\n",
              "     'meters': {'estimated_diameter_min': 18.388867207,\n",
              "      'estimated_diameter_max': 41.1187571041},\n",
              "     'miles': {'estimated_diameter_min': 0.0114263088,\n",
              "      'estimated_diameter_max': 0.0255500032},\n",
              "     'feet': {'estimated_diameter_min': 60.3309310875,\n",
              "      'estimated_diameter_max': 134.9040630575}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 18:35',\n",
              "      'epoch_date_close_approach': 1708540500000,\n",
              "      'relative_velocity': {'kilometers_per_second': '9.7828523536',\n",
              "       'kilometers_per_hour': '35218.2684729236',\n",
              "       'miles_per_hour': '21883.2624297452'},\n",
              "      'miss_distance': {'astronomical': '0.1746465265',\n",
              "       'lunar': '67.9374988085',\n",
              "       'kilometers': '26126748.367298555',\n",
              "       'miles': '16234408.635907859'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/3760491?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '3760491',\n",
              "    'neo_reference_id': '3760491',\n",
              "    'name': '(2016 TA11)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=3760491',\n",
              "    'absolute_magnitude_h': 27.1,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0101054342,\n",
              "      'estimated_diameter_max': 0.0225964377},\n",
              "     'meters': {'estimated_diameter_min': 10.1054341542,\n",
              "      'estimated_diameter_max': 22.5964377109},\n",
              "     'miles': {'estimated_diameter_min': 0.0062792237,\n",
              "      'estimated_diameter_max': 0.0140407711},\n",
              "     'feet': {'estimated_diameter_min': 33.1543125905,\n",
              "      'estimated_diameter_max': 74.1352966996}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 19:12',\n",
              "      'epoch_date_close_approach': 1708542720000,\n",
              "      'relative_velocity': {'kilometers_per_second': '11.7367782563',\n",
              "       'kilometers_per_hour': '42252.4017225025',\n",
              "       'miles_per_hour': '26253.9992814072'},\n",
              "      'miss_distance': {'astronomical': '0.1327095376',\n",
              "       'lunar': '51.6240101264',\n",
              "       'kilometers': '19853064.153644912',\n",
              "       'miles': '12336122.0314953056'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54049356?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54049356',\n",
              "    'neo_reference_id': '54049356',\n",
              "    'name': '(2020 OP3)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54049356',\n",
              "    'absolute_magnitude_h': 20.96,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.1708263953,\n",
              "      'estimated_diameter_max': 0.3819794322},\n",
              "     'meters': {'estimated_diameter_min': 170.8263952629,\n",
              "      'estimated_diameter_max': 381.979432159},\n",
              "     'miles': {'estimated_diameter_min': 0.1061465681,\n",
              "      'estimated_diameter_max': 0.2373509417},\n",
              "     'feet': {'estimated_diameter_min': 560.4540706342,\n",
              "      'estimated_diameter_max': 1253.2134002046}},\n",
              "    'is_potentially_hazardous_asteroid': True,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 08:46',\n",
              "      'epoch_date_close_approach': 1708505160000,\n",
              "      'relative_velocity': {'kilometers_per_second': '23.477571714',\n",
              "       'kilometers_per_hour': '84519.2581704389',\n",
              "       'miles_per_hour': '52516.9801670708'},\n",
              "      'miss_distance': {'astronomical': '0.4311950044',\n",
              "       'lunar': '167.7348567116',\n",
              "       'kilometers': '64505854.212880628',\n",
              "       'miles': '40082079.1771755464'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54054459?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54054459',\n",
              "    'neo_reference_id': '54054459',\n",
              "    'name': '(2020 RS9)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54054459',\n",
              "    'absolute_magnitude_h': 23.9,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.04411182,\n",
              "      'estimated_diameter_max': 0.0986370281},\n",
              "     'meters': {'estimated_diameter_min': 44.1118199997,\n",
              "      'estimated_diameter_max': 98.6370281305},\n",
              "     'miles': {'estimated_diameter_min': 0.0274098057,\n",
              "      'estimated_diameter_max': 0.0612901888},\n",
              "     'feet': {'estimated_diameter_min': 144.7238235278,\n",
              "      'estimated_diameter_max': 323.6123073718}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 08:57',\n",
              "      'epoch_date_close_approach': 1708505820000,\n",
              "      'relative_velocity': {'kilometers_per_second': '15.6901253766',\n",
              "       'kilometers_per_hour': '56484.4513558151',\n",
              "       'miles_per_hour': '35097.2414549508'},\n",
              "      'miss_distance': {'astronomical': '0.2771224704',\n",
              "       'lunar': '107.8006409856',\n",
              "       'kilometers': '41456931.300978048',\n",
              "       'miles': '25760142.5967431424'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54179306?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54179306',\n",
              "    'neo_reference_id': '54179306',\n",
              "    'name': '(2021 PK4)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54179306',\n",
              "    'absolute_magnitude_h': 28.19,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0061172324,\n",
              "      'estimated_diameter_max': 0.0136785474},\n",
              "     'meters': {'estimated_diameter_min': 6.1172323507,\n",
              "      'estimated_diameter_max': 13.6785473703},\n",
              "     'miles': {'estimated_diameter_min': 0.0038010708,\n",
              "      'estimated_diameter_max': 0.0084994527},\n",
              "     'feet': {'estimated_diameter_min': 20.0696605854,\n",
              "      'estimated_diameter_max': 44.8771253543}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 23:38',\n",
              "      'epoch_date_close_approach': 1708558680000,\n",
              "      'relative_velocity': {'kilometers_per_second': '16.1847655803',\n",
              "       'kilometers_per_hour': '58265.1560891282',\n",
              "       'miles_per_hour': '36203.702126603'},\n",
              "      'miss_distance': {'astronomical': '0.1848144716',\n",
              "       'lunar': '71.8928294524',\n",
              "       'kilometers': '27647851.296535492',\n",
              "       'miles': '17179578.1680421096'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54191344?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54191344',\n",
              "    'neo_reference_id': '54191344',\n",
              "    'name': '(2021 QE5)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54191344',\n",
              "    'absolute_magnitude_h': 22.15,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0987540639,\n",
              "      'estimated_diameter_max': 0.2208207999},\n",
              "     'meters': {'estimated_diameter_min': 98.754063894,\n",
              "      'estimated_diameter_max': 220.8207999214},\n",
              "     'miles': {'estimated_diameter_min': 0.0613629114,\n",
              "      'estimated_diameter_max': 0.1372116413},\n",
              "     'feet': {'estimated_diameter_min': 323.9962829861,\n",
              "      'estimated_diameter_max': 724.4777132141}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 00:18',\n",
              "      'epoch_date_close_approach': 1708474680000,\n",
              "      'relative_velocity': {'kilometers_per_second': '10.0062392116',\n",
              "       'kilometers_per_hour': '36022.4611618234',\n",
              "       'miles_per_hour': '22382.9564924674'},\n",
              "      'miss_distance': {'astronomical': '0.1665679914',\n",
              "       'lunar': '64.7949486546',\n",
              "       'kilometers': '24918216.723618318',\n",
              "       'miles': '15483461.8943880684'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54269715?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54269715',\n",
              "    'neo_reference_id': '54269715',\n",
              "    'name': '(2022 GE3)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54269715',\n",
              "    'absolute_magnitude_h': 23.13,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0628861456,\n",
              "      'estimated_diameter_max': 0.1406176963},\n",
              "     'meters': {'estimated_diameter_min': 62.8861455592,\n",
              "      'estimated_diameter_max': 140.6176963133},\n",
              "     'miles': {'estimated_diameter_min': 0.0390756272,\n",
              "      'estimated_diameter_max': 0.0873757586},\n",
              "     'feet': {'estimated_diameter_min': 206.3193817964,\n",
              "      'estimated_diameter_max': 461.3441627724}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 21:17',\n",
              "      'epoch_date_close_approach': 1708550220000,\n",
              "      'relative_velocity': {'kilometers_per_second': '6.9591742967',\n",
              "       'kilometers_per_hour': '25053.0274679846',\n",
              "       'miles_per_hour': '15566.9769842041'},\n",
              "      'miss_distance': {'astronomical': '0.2338046686',\n",
              "       'lunar': '90.9500160854',\n",
              "       'kilometers': '34976680.418615882',\n",
              "       'miles': '21733501.4162758916'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54292690?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54292690',\n",
              "    'neo_reference_id': '54292690',\n",
              "    'name': '(2022 OK5)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54292690',\n",
              "    'absolute_magnitude_h': 23.25,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0595052079,\n",
              "      'estimated_diameter_max': 0.1330576898},\n",
              "     'meters': {'estimated_diameter_min': 59.5052078631,\n",
              "      'estimated_diameter_max': 133.0576897973},\n",
              "     'miles': {'estimated_diameter_min': 0.0369748105,\n",
              "      'estimated_diameter_max': 0.0826781898},\n",
              "     'feet': {'estimated_diameter_min': 195.2270661657,\n",
              "      'estimated_diameter_max': 436.5409909944}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 17:25',\n",
              "      'epoch_date_close_approach': 1708536300000,\n",
              "      'relative_velocity': {'kilometers_per_second': '29.8338213427',\n",
              "       'kilometers_per_hour': '107401.7568338154',\n",
              "       'miles_per_hour': '66735.2749615449'},\n",
              "      'miss_distance': {'astronomical': '0.4691880974',\n",
              "       'lunar': '182.5141698886',\n",
              "       'kilometers': '70189540.000392538',\n",
              "       'miles': '43613757.7594235044'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54298995?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54298995',\n",
              "    'neo_reference_id': '54298995',\n",
              "    'name': '(2022 QB8)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54298995',\n",
              "    'absolute_magnitude_h': 25.85,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0179702855,\n",
              "      'estimated_diameter_max': 0.0401827799},\n",
              "     'meters': {'estimated_diameter_min': 17.9702854859,\n",
              "      'estimated_diameter_max': 40.1827799216},\n",
              "     'miles': {'estimated_diameter_min': 0.0111662143,\n",
              "      'estimated_diameter_max': 0.0249684141},\n",
              "     'feet': {'estimated_diameter_min': 58.9576314336,\n",
              "      'estimated_diameter_max': 131.833271678}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 21:32',\n",
              "      'epoch_date_close_approach': 1708551120000,\n",
              "      'relative_velocity': {'kilometers_per_second': '10.5301930797',\n",
              "       'kilometers_per_hour': '37908.6950867929',\n",
              "       'miles_per_hour': '23554.988899902'},\n",
              "      'miss_distance': {'astronomical': '0.066009367',\n",
              "       'lunar': '25.677643763',\n",
              "       'kilometers': '9874860.70324829',\n",
              "       'miles': '6135953.913034802'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54383282?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54383282',\n",
              "    'neo_reference_id': '54383282',\n",
              "    'name': '(2023 RA10)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54383282',\n",
              "    'absolute_magnitude_h': 28.8,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0046190746,\n",
              "      'estimated_diameter_max': 0.0103285648},\n",
              "     'meters': {'estimated_diameter_min': 4.6190746028,\n",
              "      'estimated_diameter_max': 10.328564805},\n",
              "     'miles': {'estimated_diameter_min': 0.002870159,\n",
              "      'estimated_diameter_max': 0.0064178706},\n",
              "     'feet': {'estimated_diameter_min': 15.1544447199,\n",
              "      'estimated_diameter_max': 33.886368555}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 21:15',\n",
              "      'epoch_date_close_approach': 1708550100000,\n",
              "      'relative_velocity': {'kilometers_per_second': '4.9097777682',\n",
              "       'kilometers_per_hour': '17675.1999655482',\n",
              "       'miles_per_hour': '10982.6818897041'},\n",
              "      'miss_distance': {'astronomical': '0.1107368194',\n",
              "       'lunar': '43.0766227466',\n",
              "       'kilometers': '16565992.312814678',\n",
              "       'miles': '10293630.3012034364'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54387143?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54387143',\n",
              "    'neo_reference_id': '54387143',\n",
              "    'name': '(2023 SO5)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54387143',\n",
              "    'absolute_magnitude_h': 25.87,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0178055329,\n",
              "      'estimated_diameter_max': 0.039814382},\n",
              "     'meters': {'estimated_diameter_min': 17.8055329183,\n",
              "      'estimated_diameter_max': 39.8143819809},\n",
              "     'miles': {'estimated_diameter_min': 0.0110638418,\n",
              "      'estimated_diameter_max': 0.0247395023},\n",
              "     'feet': {'estimated_diameter_min': 58.4171046196,\n",
              "      'estimated_diameter_max': 130.6246169782}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 03:52',\n",
              "      'epoch_date_close_approach': 1708487520000,\n",
              "      'relative_velocity': {'kilometers_per_second': '14.1476285389',\n",
              "       'kilometers_per_hour': '50931.4627401365',\n",
              "       'miles_per_hour': '31646.8302787254'},\n",
              "      'miss_distance': {'astronomical': '0.4726089822',\n",
              "       'lunar': '183.8448940758',\n",
              "       'kilometers': '70701297.079987914',\n",
              "       'miles': '43931748.8632406532'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54426744?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54426744',\n",
              "    'neo_reference_id': '54426744',\n",
              "    'name': '(2024 CL5)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54426744',\n",
              "    'absolute_magnitude_h': 25.95,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0171614894,\n",
              "      'estimated_diameter_max': 0.0383742569},\n",
              "     'meters': {'estimated_diameter_min': 17.1614894077,\n",
              "      'estimated_diameter_max': 38.3742569109},\n",
              "     'miles': {'estimated_diameter_min': 0.0106636518,\n",
              "      'estimated_diameter_max': 0.0238446504},\n",
              "     'feet': {'estimated_diameter_min': 56.3041009085,\n",
              "      'estimated_diameter_max': 125.8997970434}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 15:19',\n",
              "      'epoch_date_close_approach': 1708528740000,\n",
              "      'relative_velocity': {'kilometers_per_second': '13.9660950643',\n",
              "       'kilometers_per_hour': '50277.9422313925',\n",
              "       'miles_per_hour': '31240.7580492783'},\n",
              "      'miss_distance': {'astronomical': '0.0122088338',\n",
              "       'lunar': '4.7492363482',\n",
              "       'kilometers': '1826415.531664006',\n",
              "       'miles': '1134881.9861990428'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False},\n",
              "   {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54428356?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "    'id': '54428356',\n",
              "    'neo_reference_id': '54428356',\n",
              "    'name': '(2024 DM1)',\n",
              "    'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54428356',\n",
              "    'absolute_magnitude_h': 26.948,\n",
              "    'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0108381455,\n",
              "      'estimated_diameter_max': 0.0242348301},\n",
              "     'meters': {'estimated_diameter_min': 10.8381454893,\n",
              "      'estimated_diameter_max': 24.2348300642},\n",
              "     'miles': {'estimated_diameter_min': 0.0067345093,\n",
              "      'estimated_diameter_max': 0.0150588206},\n",
              "     'feet': {'estimated_diameter_min': 35.5582212472,\n",
              "      'estimated_diameter_max': 79.5105998677}},\n",
              "    'is_potentially_hazardous_asteroid': False,\n",
              "    'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "      'close_approach_date_full': '2024-Feb-21 05:15',\n",
              "      'epoch_date_close_approach': 1708492500000,\n",
              "      'relative_velocity': {'kilometers_per_second': '7.4818170615',\n",
              "       'kilometers_per_hour': '26934.5414212548',\n",
              "       'miles_per_hour': '16736.0765847791'},\n",
              "      'miss_distance': {'astronomical': '0.0223399431',\n",
              "       'lunar': '8.6902378659',\n",
              "       'kilometers': '3342007.903681197',\n",
              "       'miles': '2076627.4168546386'},\n",
              "      'orbiting_body': 'Earth'}],\n",
              "    'is_sentry_object': False}]}}"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# get the piece of data we need from the json object\n",
        "asteroids = data['near_earth_objects'][start_date]\n",
        "asteroids"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JtNo05kn-TPz",
        "outputId": "b6414382-b352-484c-ee7a-7e5886c75340"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/2417264?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '2417264',\n",
              "  'neo_reference_id': '2417264',\n",
              "  'name': '417264 (2006 AT2)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=2417264',\n",
              "  'absolute_magnitude_h': 17.13,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.99667824,\n",
              "    'estimated_diameter_max': 2.2286402963},\n",
              "   'meters': {'estimated_diameter_min': 996.6782399685,\n",
              "    'estimated_diameter_max': 2228.6402962644},\n",
              "   'miles': {'estimated_diameter_min': 0.6193069546,\n",
              "    'estimated_diameter_max': 1.3848124495},\n",
              "   'feet': {'estimated_diameter_min': 3269.9418368182,\n",
              "    'estimated_diameter_max': 7311.8122295961}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 10:10',\n",
              "    'epoch_date_close_approach': 1708510200000,\n",
              "    'relative_velocity': {'kilometers_per_second': '15.3033181047',\n",
              "     'kilometers_per_hour': '55091.9451769682',\n",
              "     'miles_per_hour': '34231.9922684334'},\n",
              "    'miss_distance': {'astronomical': '0.1598481563',\n",
              "     'lunar': '62.1809328007',\n",
              "     'kilometers': '23912943.705907081',\n",
              "     'miles': '14858814.2064804778'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/3743897?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '3743897',\n",
              "  'neo_reference_id': '3743897',\n",
              "  'name': '(2016 CO246)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=3743897',\n",
              "  'absolute_magnitude_h': 25.8,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0183888672,\n",
              "    'estimated_diameter_max': 0.0411187571},\n",
              "   'meters': {'estimated_diameter_min': 18.388867207,\n",
              "    'estimated_diameter_max': 41.1187571041},\n",
              "   'miles': {'estimated_diameter_min': 0.0114263088,\n",
              "    'estimated_diameter_max': 0.0255500032},\n",
              "   'feet': {'estimated_diameter_min': 60.3309310875,\n",
              "    'estimated_diameter_max': 134.9040630575}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 18:35',\n",
              "    'epoch_date_close_approach': 1708540500000,\n",
              "    'relative_velocity': {'kilometers_per_second': '9.7828523536',\n",
              "     'kilometers_per_hour': '35218.2684729236',\n",
              "     'miles_per_hour': '21883.2624297452'},\n",
              "    'miss_distance': {'astronomical': '0.1746465265',\n",
              "     'lunar': '67.9374988085',\n",
              "     'kilometers': '26126748.367298555',\n",
              "     'miles': '16234408.635907859'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/3760491?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '3760491',\n",
              "  'neo_reference_id': '3760491',\n",
              "  'name': '(2016 TA11)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=3760491',\n",
              "  'absolute_magnitude_h': 27.1,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0101054342,\n",
              "    'estimated_diameter_max': 0.0225964377},\n",
              "   'meters': {'estimated_diameter_min': 10.1054341542,\n",
              "    'estimated_diameter_max': 22.5964377109},\n",
              "   'miles': {'estimated_diameter_min': 0.0062792237,\n",
              "    'estimated_diameter_max': 0.0140407711},\n",
              "   'feet': {'estimated_diameter_min': 33.1543125905,\n",
              "    'estimated_diameter_max': 74.1352966996}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 19:12',\n",
              "    'epoch_date_close_approach': 1708542720000,\n",
              "    'relative_velocity': {'kilometers_per_second': '11.7367782563',\n",
              "     'kilometers_per_hour': '42252.4017225025',\n",
              "     'miles_per_hour': '26253.9992814072'},\n",
              "    'miss_distance': {'astronomical': '0.1327095376',\n",
              "     'lunar': '51.6240101264',\n",
              "     'kilometers': '19853064.153644912',\n",
              "     'miles': '12336122.0314953056'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54049356?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54049356',\n",
              "  'neo_reference_id': '54049356',\n",
              "  'name': '(2020 OP3)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54049356',\n",
              "  'absolute_magnitude_h': 20.96,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.1708263953,\n",
              "    'estimated_diameter_max': 0.3819794322},\n",
              "   'meters': {'estimated_diameter_min': 170.8263952629,\n",
              "    'estimated_diameter_max': 381.979432159},\n",
              "   'miles': {'estimated_diameter_min': 0.1061465681,\n",
              "    'estimated_diameter_max': 0.2373509417},\n",
              "   'feet': {'estimated_diameter_min': 560.4540706342,\n",
              "    'estimated_diameter_max': 1253.2134002046}},\n",
              "  'is_potentially_hazardous_asteroid': True,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 08:46',\n",
              "    'epoch_date_close_approach': 1708505160000,\n",
              "    'relative_velocity': {'kilometers_per_second': '23.477571714',\n",
              "     'kilometers_per_hour': '84519.2581704389',\n",
              "     'miles_per_hour': '52516.9801670708'},\n",
              "    'miss_distance': {'astronomical': '0.4311950044',\n",
              "     'lunar': '167.7348567116',\n",
              "     'kilometers': '64505854.212880628',\n",
              "     'miles': '40082079.1771755464'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54054459?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54054459',\n",
              "  'neo_reference_id': '54054459',\n",
              "  'name': '(2020 RS9)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54054459',\n",
              "  'absolute_magnitude_h': 23.9,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.04411182,\n",
              "    'estimated_diameter_max': 0.0986370281},\n",
              "   'meters': {'estimated_diameter_min': 44.1118199997,\n",
              "    'estimated_diameter_max': 98.6370281305},\n",
              "   'miles': {'estimated_diameter_min': 0.0274098057,\n",
              "    'estimated_diameter_max': 0.0612901888},\n",
              "   'feet': {'estimated_diameter_min': 144.7238235278,\n",
              "    'estimated_diameter_max': 323.6123073718}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 08:57',\n",
              "    'epoch_date_close_approach': 1708505820000,\n",
              "    'relative_velocity': {'kilometers_per_second': '15.6901253766',\n",
              "     'kilometers_per_hour': '56484.4513558151',\n",
              "     'miles_per_hour': '35097.2414549508'},\n",
              "    'miss_distance': {'astronomical': '0.2771224704',\n",
              "     'lunar': '107.8006409856',\n",
              "     'kilometers': '41456931.300978048',\n",
              "     'miles': '25760142.5967431424'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54179306?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54179306',\n",
              "  'neo_reference_id': '54179306',\n",
              "  'name': '(2021 PK4)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54179306',\n",
              "  'absolute_magnitude_h': 28.19,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0061172324,\n",
              "    'estimated_diameter_max': 0.0136785474},\n",
              "   'meters': {'estimated_diameter_min': 6.1172323507,\n",
              "    'estimated_diameter_max': 13.6785473703},\n",
              "   'miles': {'estimated_diameter_min': 0.0038010708,\n",
              "    'estimated_diameter_max': 0.0084994527},\n",
              "   'feet': {'estimated_diameter_min': 20.0696605854,\n",
              "    'estimated_diameter_max': 44.8771253543}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 23:38',\n",
              "    'epoch_date_close_approach': 1708558680000,\n",
              "    'relative_velocity': {'kilometers_per_second': '16.1847655803',\n",
              "     'kilometers_per_hour': '58265.1560891282',\n",
              "     'miles_per_hour': '36203.702126603'},\n",
              "    'miss_distance': {'astronomical': '0.1848144716',\n",
              "     'lunar': '71.8928294524',\n",
              "     'kilometers': '27647851.296535492',\n",
              "     'miles': '17179578.1680421096'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54191344?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54191344',\n",
              "  'neo_reference_id': '54191344',\n",
              "  'name': '(2021 QE5)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54191344',\n",
              "  'absolute_magnitude_h': 22.15,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0987540639,\n",
              "    'estimated_diameter_max': 0.2208207999},\n",
              "   'meters': {'estimated_diameter_min': 98.754063894,\n",
              "    'estimated_diameter_max': 220.8207999214},\n",
              "   'miles': {'estimated_diameter_min': 0.0613629114,\n",
              "    'estimated_diameter_max': 0.1372116413},\n",
              "   'feet': {'estimated_diameter_min': 323.9962829861,\n",
              "    'estimated_diameter_max': 724.4777132141}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 00:18',\n",
              "    'epoch_date_close_approach': 1708474680000,\n",
              "    'relative_velocity': {'kilometers_per_second': '10.0062392116',\n",
              "     'kilometers_per_hour': '36022.4611618234',\n",
              "     'miles_per_hour': '22382.9564924674'},\n",
              "    'miss_distance': {'astronomical': '0.1665679914',\n",
              "     'lunar': '64.7949486546',\n",
              "     'kilometers': '24918216.723618318',\n",
              "     'miles': '15483461.8943880684'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54269715?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54269715',\n",
              "  'neo_reference_id': '54269715',\n",
              "  'name': '(2022 GE3)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54269715',\n",
              "  'absolute_magnitude_h': 23.13,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0628861456,\n",
              "    'estimated_diameter_max': 0.1406176963},\n",
              "   'meters': {'estimated_diameter_min': 62.8861455592,\n",
              "    'estimated_diameter_max': 140.6176963133},\n",
              "   'miles': {'estimated_diameter_min': 0.0390756272,\n",
              "    'estimated_diameter_max': 0.0873757586},\n",
              "   'feet': {'estimated_diameter_min': 206.3193817964,\n",
              "    'estimated_diameter_max': 461.3441627724}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 21:17',\n",
              "    'epoch_date_close_approach': 1708550220000,\n",
              "    'relative_velocity': {'kilometers_per_second': '6.9591742967',\n",
              "     'kilometers_per_hour': '25053.0274679846',\n",
              "     'miles_per_hour': '15566.9769842041'},\n",
              "    'miss_distance': {'astronomical': '0.2338046686',\n",
              "     'lunar': '90.9500160854',\n",
              "     'kilometers': '34976680.418615882',\n",
              "     'miles': '21733501.4162758916'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54292690?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54292690',\n",
              "  'neo_reference_id': '54292690',\n",
              "  'name': '(2022 OK5)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54292690',\n",
              "  'absolute_magnitude_h': 23.25,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0595052079,\n",
              "    'estimated_diameter_max': 0.1330576898},\n",
              "   'meters': {'estimated_diameter_min': 59.5052078631,\n",
              "    'estimated_diameter_max': 133.0576897973},\n",
              "   'miles': {'estimated_diameter_min': 0.0369748105,\n",
              "    'estimated_diameter_max': 0.0826781898},\n",
              "   'feet': {'estimated_diameter_min': 195.2270661657,\n",
              "    'estimated_diameter_max': 436.5409909944}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 17:25',\n",
              "    'epoch_date_close_approach': 1708536300000,\n",
              "    'relative_velocity': {'kilometers_per_second': '29.8338213427',\n",
              "     'kilometers_per_hour': '107401.7568338154',\n",
              "     'miles_per_hour': '66735.2749615449'},\n",
              "    'miss_distance': {'astronomical': '0.4691880974',\n",
              "     'lunar': '182.5141698886',\n",
              "     'kilometers': '70189540.000392538',\n",
              "     'miles': '43613757.7594235044'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54298995?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54298995',\n",
              "  'neo_reference_id': '54298995',\n",
              "  'name': '(2022 QB8)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54298995',\n",
              "  'absolute_magnitude_h': 25.85,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0179702855,\n",
              "    'estimated_diameter_max': 0.0401827799},\n",
              "   'meters': {'estimated_diameter_min': 17.9702854859,\n",
              "    'estimated_diameter_max': 40.1827799216},\n",
              "   'miles': {'estimated_diameter_min': 0.0111662143,\n",
              "    'estimated_diameter_max': 0.0249684141},\n",
              "   'feet': {'estimated_diameter_min': 58.9576314336,\n",
              "    'estimated_diameter_max': 131.833271678}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 21:32',\n",
              "    'epoch_date_close_approach': 1708551120000,\n",
              "    'relative_velocity': {'kilometers_per_second': '10.5301930797',\n",
              "     'kilometers_per_hour': '37908.6950867929',\n",
              "     'miles_per_hour': '23554.988899902'},\n",
              "    'miss_distance': {'astronomical': '0.066009367',\n",
              "     'lunar': '25.677643763',\n",
              "     'kilometers': '9874860.70324829',\n",
              "     'miles': '6135953.913034802'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54383282?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54383282',\n",
              "  'neo_reference_id': '54383282',\n",
              "  'name': '(2023 RA10)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54383282',\n",
              "  'absolute_magnitude_h': 28.8,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0046190746,\n",
              "    'estimated_diameter_max': 0.0103285648},\n",
              "   'meters': {'estimated_diameter_min': 4.6190746028,\n",
              "    'estimated_diameter_max': 10.328564805},\n",
              "   'miles': {'estimated_diameter_min': 0.002870159,\n",
              "    'estimated_diameter_max': 0.0064178706},\n",
              "   'feet': {'estimated_diameter_min': 15.1544447199,\n",
              "    'estimated_diameter_max': 33.886368555}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 21:15',\n",
              "    'epoch_date_close_approach': 1708550100000,\n",
              "    'relative_velocity': {'kilometers_per_second': '4.9097777682',\n",
              "     'kilometers_per_hour': '17675.1999655482',\n",
              "     'miles_per_hour': '10982.6818897041'},\n",
              "    'miss_distance': {'astronomical': '0.1107368194',\n",
              "     'lunar': '43.0766227466',\n",
              "     'kilometers': '16565992.312814678',\n",
              "     'miles': '10293630.3012034364'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54387143?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54387143',\n",
              "  'neo_reference_id': '54387143',\n",
              "  'name': '(2023 SO5)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54387143',\n",
              "  'absolute_magnitude_h': 25.87,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0178055329,\n",
              "    'estimated_diameter_max': 0.039814382},\n",
              "   'meters': {'estimated_diameter_min': 17.8055329183,\n",
              "    'estimated_diameter_max': 39.8143819809},\n",
              "   'miles': {'estimated_diameter_min': 0.0110638418,\n",
              "    'estimated_diameter_max': 0.0247395023},\n",
              "   'feet': {'estimated_diameter_min': 58.4171046196,\n",
              "    'estimated_diameter_max': 130.6246169782}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 03:52',\n",
              "    'epoch_date_close_approach': 1708487520000,\n",
              "    'relative_velocity': {'kilometers_per_second': '14.1476285389',\n",
              "     'kilometers_per_hour': '50931.4627401365',\n",
              "     'miles_per_hour': '31646.8302787254'},\n",
              "    'miss_distance': {'astronomical': '0.4726089822',\n",
              "     'lunar': '183.8448940758',\n",
              "     'kilometers': '70701297.079987914',\n",
              "     'miles': '43931748.8632406532'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54426744?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54426744',\n",
              "  'neo_reference_id': '54426744',\n",
              "  'name': '(2024 CL5)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54426744',\n",
              "  'absolute_magnitude_h': 25.95,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0171614894,\n",
              "    'estimated_diameter_max': 0.0383742569},\n",
              "   'meters': {'estimated_diameter_min': 17.1614894077,\n",
              "    'estimated_diameter_max': 38.3742569109},\n",
              "   'miles': {'estimated_diameter_min': 0.0106636518,\n",
              "    'estimated_diameter_max': 0.0238446504},\n",
              "   'feet': {'estimated_diameter_min': 56.3041009085,\n",
              "    'estimated_diameter_max': 125.8997970434}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 15:19',\n",
              "    'epoch_date_close_approach': 1708528740000,\n",
              "    'relative_velocity': {'kilometers_per_second': '13.9660950643',\n",
              "     'kilometers_per_hour': '50277.9422313925',\n",
              "     'miles_per_hour': '31240.7580492783'},\n",
              "    'miss_distance': {'astronomical': '0.0122088338',\n",
              "     'lunar': '4.7492363482',\n",
              "     'kilometers': '1826415.531664006',\n",
              "     'miles': '1134881.9861990428'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False},\n",
              " {'links': {'self': 'http://api.nasa.gov/neo/rest/v1/neo/54428356?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV'},\n",
              "  'id': '54428356',\n",
              "  'neo_reference_id': '54428356',\n",
              "  'name': '(2024 DM1)',\n",
              "  'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54428356',\n",
              "  'absolute_magnitude_h': 26.948,\n",
              "  'estimated_diameter': {'kilometers': {'estimated_diameter_min': 0.0108381455,\n",
              "    'estimated_diameter_max': 0.0242348301},\n",
              "   'meters': {'estimated_diameter_min': 10.8381454893,\n",
              "    'estimated_diameter_max': 24.2348300642},\n",
              "   'miles': {'estimated_diameter_min': 0.0067345093,\n",
              "    'estimated_diameter_max': 0.0150588206},\n",
              "   'feet': {'estimated_diameter_min': 35.5582212472,\n",
              "    'estimated_diameter_max': 79.5105998677}},\n",
              "  'is_potentially_hazardous_asteroid': False,\n",
              "  'close_approach_data': [{'close_approach_date': '2024-02-21',\n",
              "    'close_approach_date_full': '2024-Feb-21 05:15',\n",
              "    'epoch_date_close_approach': 1708492500000,\n",
              "    'relative_velocity': {'kilometers_per_second': '7.4818170615',\n",
              "     'kilometers_per_hour': '26934.5414212548',\n",
              "     'miles_per_hour': '16736.0765847791'},\n",
              "    'miss_distance': {'astronomical': '0.0223399431',\n",
              "     'lunar': '8.6902378659',\n",
              "     'kilometers': '3342007.903681197',\n",
              "     'miles': '2076627.4168546386'},\n",
              "    'orbiting_body': 'Earth'}],\n",
              "  'is_sentry_object': False}]"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# how many asteroid observations do we have\n",
        "len(asteroids)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jSZdRC66qgK6",
        "outputId": "ee3700f6-4faf-4de0-d01c-bf3ed109717c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "14"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "id": "pSuO488VG84S",
        "outputId": "ecbf48cb-3ff8-43f4-b76b-6a53fbb17bd6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               links        id  \\\n",
              "0  {'self': 'http://api.nasa.gov/neo/rest/v1/neo/...   2417264   \n",
              "1  {'self': 'http://api.nasa.gov/neo/rest/v1/neo/...   3743897   \n",
              "2  {'self': 'http://api.nasa.gov/neo/rest/v1/neo/...   3760491   \n",
              "3  {'self': 'http://api.nasa.gov/neo/rest/v1/neo/...  54049356   \n",
              "4  {'self': 'http://api.nasa.gov/neo/rest/v1/neo/...  54054459   \n",
              "\n",
              "  neo_reference_id               name  \\\n",
              "0          2417264  417264 (2006 AT2)   \n",
              "1          3743897       (2016 CO246)   \n",
              "2          3760491        (2016 TA11)   \n",
              "3         54049356         (2020 OP3)   \n",
              "4         54054459         (2020 RS9)   \n",
              "\n",
              "                                        nasa_jpl_url  absolute_magnitude_h  \\\n",
              "0  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 17.13   \n",
              "1  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 25.80   \n",
              "2  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 27.10   \n",
              "3  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 20.96   \n",
              "4  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 23.90   \n",
              "\n",
              "                                  estimated_diameter  \\\n",
              "0  {'kilometers': {'estimated_diameter_min': 0.99...   \n",
              "1  {'kilometers': {'estimated_diameter_min': 0.01...   \n",
              "2  {'kilometers': {'estimated_diameter_min': 0.01...   \n",
              "3  {'kilometers': {'estimated_diameter_min': 0.17...   \n",
              "4  {'kilometers': {'estimated_diameter_min': 0.04...   \n",
              "\n",
              "   is_potentially_hazardous_asteroid  \\\n",
              "0                              False   \n",
              "1                              False   \n",
              "2                              False   \n",
              "3                               True   \n",
              "4                              False   \n",
              "\n",
              "                                 close_approach_data  is_sentry_object  \n",
              "0  [{'close_approach_date': '2024-02-21', 'close_...             False  \n",
              "1  [{'close_approach_date': '2024-02-21', 'close_...             False  \n",
              "2  [{'close_approach_date': '2024-02-21', 'close_...             False  \n",
              "3  [{'close_approach_date': '2024-02-21', 'close_...             False  \n",
              "4  [{'close_approach_date': '2024-02-21', 'close_...             False  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97e790d0-6263-49d9-8fa0-5050e4596d5b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>links</th>\n",
              "      <th>id</th>\n",
              "      <th>neo_reference_id</th>\n",
              "      <th>name</th>\n",
              "      <th>nasa_jpl_url</th>\n",
              "      <th>absolute_magnitude_h</th>\n",
              "      <th>estimated_diameter</th>\n",
              "      <th>is_potentially_hazardous_asteroid</th>\n",
              "      <th>close_approach_data</th>\n",
              "      <th>is_sentry_object</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>{'self': 'http://api.nasa.gov/neo/rest/v1/neo/...</td>\n",
              "      <td>2417264</td>\n",
              "      <td>2417264</td>\n",
              "      <td>417264 (2006 AT2)</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>17.13</td>\n",
              "      <td>{'kilometers': {'estimated_diameter_min': 0.99...</td>\n",
              "      <td>False</td>\n",
              "      <td>[{'close_approach_date': '2024-02-21', 'close_...</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>{'self': 'http://api.nasa.gov/neo/rest/v1/neo/...</td>\n",
              "      <td>3743897</td>\n",
              "      <td>3743897</td>\n",
              "      <td>(2016 CO246)</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.80</td>\n",
              "      <td>{'kilometers': {'estimated_diameter_min': 0.01...</td>\n",
              "      <td>False</td>\n",
              "      <td>[{'close_approach_date': '2024-02-21', 'close_...</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>{'self': 'http://api.nasa.gov/neo/rest/v1/neo/...</td>\n",
              "      <td>3760491</td>\n",
              "      <td>3760491</td>\n",
              "      <td>(2016 TA11)</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>27.10</td>\n",
              "      <td>{'kilometers': {'estimated_diameter_min': 0.01...</td>\n",
              "      <td>False</td>\n",
              "      <td>[{'close_approach_date': '2024-02-21', 'close_...</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>{'self': 'http://api.nasa.gov/neo/rest/v1/neo/...</td>\n",
              "      <td>54049356</td>\n",
              "      <td>54049356</td>\n",
              "      <td>(2020 OP3)</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>20.96</td>\n",
              "      <td>{'kilometers': {'estimated_diameter_min': 0.17...</td>\n",
              "      <td>True</td>\n",
              "      <td>[{'close_approach_date': '2024-02-21', 'close_...</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>{'self': 'http://api.nasa.gov/neo/rest/v1/neo/...</td>\n",
              "      <td>54054459</td>\n",
              "      <td>54054459</td>\n",
              "      <td>(2020 RS9)</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>23.90</td>\n",
              "      <td>{'kilometers': {'estimated_diameter_min': 0.04...</td>\n",
              "      <td>False</td>\n",
              "      <td>[{'close_approach_date': '2024-02-21', 'close_...</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97e790d0-6263-49d9-8fa0-5050e4596d5b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-97e790d0-6263-49d9-8fa0-5050e4596d5b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-97e790d0-6263-49d9-8fa0-5050e4596d5b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b239f34b-e023-49f2-9073-9e2c2214f582\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b239f34b-e023-49f2-9073-9e2c2214f582')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b239f34b-e023-49f2-9073-9e2c2214f582 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"links\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"54298995\",\n          \"54387143\",\n          \"2417264\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neo_reference_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"54298995\",\n          \"54387143\",\n          \"2417264\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"(2022 QB8)\",\n          \"(2023 SO5)\",\n          \"417264 (2006 AT2)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nasa_jpl_url\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54298995\",\n          \"https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54387143\",\n          \"https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=2417264\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"absolute_magnitude_h\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.1406434141661257,\n        \"min\": 17.13,\n        \"max\": 28.8,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          25.85,\n          25.87,\n          17.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"estimated_diameter\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_potentially_hazardous_asteroid\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"close_approach_data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_sentry_object\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 54
        }
      ],
      "source": [
        "# simple data assimilation, the row values are not completely\n",
        "# set into a single value, lots of multi-object columns\n",
        "df = pd.DataFrame(asteroids)\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# better assimilation, lets cleanup the data ourselves\n",
        "asteroids_data_list = []\n",
        "for asteroid in asteroids:\n",
        "\n",
        "    # print the keys from the json dictionary for each observation\n",
        "    # dict_keys(['links', 'id', 'neo_reference_id', 'name', 'nasa_jpl_url',\n",
        "    # 'absolute_magnitude_h', 'estimated_diameter', 'is_potentially_hazardous_asteroid', 'close_approach_data', 'is_sentry_object'])\n",
        "\n",
        "    # example use case to insert the data\n",
        "    # print(asteroid['is_sentry_object'])\n",
        "\n",
        "    # get the data we need\n",
        "    asteroid_data_dict = {\n",
        "        'name': asteroid['name'],\n",
        "        'id': asteroid['id'],\n",
        "        'neo_reference_id': asteroid['neo_reference_id'],\n",
        "        'link': asteroid['links']['self'],\n",
        "        'nasa_jpl_url': asteroid['nasa_jpl_url'],\n",
        "        'absolute_magnitude_h': asteroid['absolute_magnitude_h'],\n",
        "        'is_sentry_object': asteroid['is_sentry_object'],\n",
        "        'is_potentially_hazardous_asteroid': asteroid['is_potentially_hazardous_asteroid'],\n",
        "        'diameter': asteroid['estimated_diameter']['meters']['estimated_diameter_max']\n",
        "    }\n",
        "\n",
        "    # {'close_approach_date': '2024-02-21', 'close_approach_date_full': '2024-Feb-21 10:10', 'epoch_date_close_approach': 1708510200000, 'relative_velocity': {'kilometers_per_second': '15.3033181047', 'kilometers_per_hour': '55091.9451769682', 'miles_per_hour': '34231.9922684334'}, 'miss_distance': {'astronomical': '0.1598481563', 'lunar': '62.1809328007', 'kilometers': '23912943.705907081', 'miles': '14858814.2064804778'}, 'orbiting_body': 'Earth'}\n",
        "\n",
        "    print(asteroid_data_dict)\n",
        "    #print(asteroid['close_approach_data'][0])\n",
        "    asteroid_data_dict.update(asteroid['close_approach_data'][0])\n",
        "    asteroids_data_list.append(asteroid_data_dict)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x9hsiKfDKK2n",
        "outputId": "0cd020a4-5001-4f91-b396-3fff767d3087"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'name': '417264 (2006 AT2)', 'id': '2417264', 'neo_reference_id': '2417264', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/2417264?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=2417264', 'absolute_magnitude_h': 17.13, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 2228.6402962644}\n",
            "{'name': '(2016 CO246)', 'id': '3743897', 'neo_reference_id': '3743897', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/3743897?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=3743897', 'absolute_magnitude_h': 25.8, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 41.1187571041}\n",
            "{'name': '(2016 TA11)', 'id': '3760491', 'neo_reference_id': '3760491', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/3760491?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=3760491', 'absolute_magnitude_h': 27.1, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 22.5964377109}\n",
            "{'name': '(2020 OP3)', 'id': '54049356', 'neo_reference_id': '54049356', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54049356?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54049356', 'absolute_magnitude_h': 20.96, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': True, 'diameter': 381.979432159}\n",
            "{'name': '(2020 RS9)', 'id': '54054459', 'neo_reference_id': '54054459', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54054459?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54054459', 'absolute_magnitude_h': 23.9, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 98.6370281305}\n",
            "{'name': '(2021 PK4)', 'id': '54179306', 'neo_reference_id': '54179306', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54179306?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54179306', 'absolute_magnitude_h': 28.19, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 13.6785473703}\n",
            "{'name': '(2021 QE5)', 'id': '54191344', 'neo_reference_id': '54191344', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54191344?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54191344', 'absolute_magnitude_h': 22.15, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 220.8207999214}\n",
            "{'name': '(2022 GE3)', 'id': '54269715', 'neo_reference_id': '54269715', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54269715?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54269715', 'absolute_magnitude_h': 23.13, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 140.6176963133}\n",
            "{'name': '(2022 OK5)', 'id': '54292690', 'neo_reference_id': '54292690', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54292690?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54292690', 'absolute_magnitude_h': 23.25, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 133.0576897973}\n",
            "{'name': '(2022 QB8)', 'id': '54298995', 'neo_reference_id': '54298995', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54298995?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54298995', 'absolute_magnitude_h': 25.85, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 40.1827799216}\n",
            "{'name': '(2023 RA10)', 'id': '54383282', 'neo_reference_id': '54383282', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54383282?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54383282', 'absolute_magnitude_h': 28.8, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 10.328564805}\n",
            "{'name': '(2023 SO5)', 'id': '54387143', 'neo_reference_id': '54387143', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54387143?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54387143', 'absolute_magnitude_h': 25.87, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 39.8143819809}\n",
            "{'name': '(2024 CL5)', 'id': '54426744', 'neo_reference_id': '54426744', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54426744?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54426744', 'absolute_magnitude_h': 25.95, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 38.3742569109}\n",
            "{'name': '(2024 DM1)', 'id': '54428356', 'neo_reference_id': '54428356', 'link': 'http://api.nasa.gov/neo/rest/v1/neo/54428356?api_key=AZrjEZKBctLv3n5JXgFlMJQPkVEBVX5WK2Zj0uWV', 'nasa_jpl_url': 'https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=54428356', 'absolute_magnitude_h': 26.948, 'is_sentry_object': False, 'is_potentially_hazardous_asteroid': False, 'diameter': 24.2348300642}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.DataFrame(asteroids_data_list)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "id": "ov9Con1DBklL",
        "outputId": "3f5c8bf1-1f4e-48ba-d755-c7c9f6fe41b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                name        id neo_reference_id  \\\n",
              "0  417264 (2006 AT2)   2417264          2417264   \n",
              "1       (2016 CO246)   3743897          3743897   \n",
              "2        (2016 TA11)   3760491          3760491   \n",
              "3         (2020 OP3)  54049356         54049356   \n",
              "4         (2020 RS9)  54054459         54054459   \n",
              "\n",
              "                                                link  \\\n",
              "0  http://api.nasa.gov/neo/rest/v1/neo/2417264?ap...   \n",
              "1  http://api.nasa.gov/neo/rest/v1/neo/3743897?ap...   \n",
              "2  http://api.nasa.gov/neo/rest/v1/neo/3760491?ap...   \n",
              "3  http://api.nasa.gov/neo/rest/v1/neo/54049356?a...   \n",
              "4  http://api.nasa.gov/neo/rest/v1/neo/54054459?a...   \n",
              "\n",
              "                                        nasa_jpl_url  absolute_magnitude_h  \\\n",
              "0  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 17.13   \n",
              "1  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 25.80   \n",
              "2  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 27.10   \n",
              "3  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 20.96   \n",
              "4  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 23.90   \n",
              "\n",
              "   is_sentry_object  is_potentially_hazardous_asteroid     diameter  \\\n",
              "0             False                              False  2228.640296   \n",
              "1             False                              False    41.118757   \n",
              "2             False                              False    22.596438   \n",
              "3             False                               True   381.979432   \n",
              "4             False                              False    98.637028   \n",
              "\n",
              "  close_approach_date close_approach_date_full  epoch_date_close_approach  \\\n",
              "0          2024-02-21        2024-Feb-21 10:10              1708510200000   \n",
              "1          2024-02-21        2024-Feb-21 18:35              1708540500000   \n",
              "2          2024-02-21        2024-Feb-21 19:12              1708542720000   \n",
              "3          2024-02-21        2024-Feb-21 08:46              1708505160000   \n",
              "4          2024-02-21        2024-Feb-21 08:57              1708505820000   \n",
              "\n",
              "                                   relative_velocity  \\\n",
              "0  {'kilometers_per_second': '15.3033181047', 'ki...   \n",
              "1  {'kilometers_per_second': '9.7828523536', 'kil...   \n",
              "2  {'kilometers_per_second': '11.7367782563', 'ki...   \n",
              "3  {'kilometers_per_second': '23.477571714', 'kil...   \n",
              "4  {'kilometers_per_second': '15.6901253766', 'ki...   \n",
              "\n",
              "                                       miss_distance orbiting_body  \n",
              "0  {'astronomical': '0.1598481563', 'lunar': '62....         Earth  \n",
              "1  {'astronomical': '0.1746465265', 'lunar': '67....         Earth  \n",
              "2  {'astronomical': '0.1327095376', 'lunar': '51....         Earth  \n",
              "3  {'astronomical': '0.4311950044', 'lunar': '167...         Earth  \n",
              "4  {'astronomical': '0.2771224704', 'lunar': '107...         Earth  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-743c9c2d-ba0b-4e49-8dbb-826605e8b28b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>id</th>\n",
              "      <th>neo_reference_id</th>\n",
              "      <th>link</th>\n",
              "      <th>nasa_jpl_url</th>\n",
              "      <th>absolute_magnitude_h</th>\n",
              "      <th>is_sentry_object</th>\n",
              "      <th>is_potentially_hazardous_asteroid</th>\n",
              "      <th>diameter</th>\n",
              "      <th>close_approach_date</th>\n",
              "      <th>close_approach_date_full</th>\n",
              "      <th>epoch_date_close_approach</th>\n",
              "      <th>relative_velocity</th>\n",
              "      <th>miss_distance</th>\n",
              "      <th>orbiting_body</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>417264 (2006 AT2)</td>\n",
              "      <td>2417264</td>\n",
              "      <td>2417264</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/2417264?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>17.13</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2228.640296</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 10:10</td>\n",
              "      <td>1708510200000</td>\n",
              "      <td>{'kilometers_per_second': '15.3033181047', 'ki...</td>\n",
              "      <td>{'astronomical': '0.1598481563', 'lunar': '62....</td>\n",
              "      <td>Earth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(2016 CO246)</td>\n",
              "      <td>3743897</td>\n",
              "      <td>3743897</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/3743897?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.80</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41.118757</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 18:35</td>\n",
              "      <td>1708540500000</td>\n",
              "      <td>{'kilometers_per_second': '9.7828523536', 'kil...</td>\n",
              "      <td>{'astronomical': '0.1746465265', 'lunar': '67....</td>\n",
              "      <td>Earth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(2016 TA11)</td>\n",
              "      <td>3760491</td>\n",
              "      <td>3760491</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/3760491?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>27.10</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>22.596438</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 19:12</td>\n",
              "      <td>1708542720000</td>\n",
              "      <td>{'kilometers_per_second': '11.7367782563', 'ki...</td>\n",
              "      <td>{'astronomical': '0.1327095376', 'lunar': '51....</td>\n",
              "      <td>Earth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(2020 OP3)</td>\n",
              "      <td>54049356</td>\n",
              "      <td>54049356</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54049356?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>20.96</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>381.979432</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 08:46</td>\n",
              "      <td>1708505160000</td>\n",
              "      <td>{'kilometers_per_second': '23.477571714', 'kil...</td>\n",
              "      <td>{'astronomical': '0.4311950044', 'lunar': '167...</td>\n",
              "      <td>Earth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(2020 RS9)</td>\n",
              "      <td>54054459</td>\n",
              "      <td>54054459</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54054459?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>23.90</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>98.637028</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 08:57</td>\n",
              "      <td>1708505820000</td>\n",
              "      <td>{'kilometers_per_second': '15.6901253766', 'ki...</td>\n",
              "      <td>{'astronomical': '0.2771224704', 'lunar': '107...</td>\n",
              "      <td>Earth</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-743c9c2d-ba0b-4e49-8dbb-826605e8b28b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-743c9c2d-ba0b-4e49-8dbb-826605e8b28b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-743c9c2d-ba0b-4e49-8dbb-826605e8b28b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1de795f1-4319-471f-aec4-941a38790307\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1de795f1-4319-471f-aec4-941a38790307')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1de795f1-4319-471f-aec4-941a38790307 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "repr_error": "'str' object has no attribute 'empty'"
            }
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "relative_velocity_df = pd.json_normalize(df['relative_velocity'])\n",
        "relative_velocity_df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "PT8_zdoeIoA8",
        "outputId": "cbac31bd-82f1-4c81-9d58-3195051ff6a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  kilometers_per_second kilometers_per_hour    miles_per_hour\n",
              "0         15.3033181047    55091.9451769682  34231.9922684334\n",
              "1          9.7828523536    35218.2684729236  21883.2624297452"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f4b41ce-ea38-4636-ad62-587e4fdc4ed5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>kilometers_per_second</th>\n",
              "      <th>kilometers_per_hour</th>\n",
              "      <th>miles_per_hour</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>15.3033181047</td>\n",
              "      <td>55091.9451769682</td>\n",
              "      <td>34231.9922684334</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>9.7828523536</td>\n",
              "      <td>35218.2684729236</td>\n",
              "      <td>21883.2624297452</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f4b41ce-ea38-4636-ad62-587e4fdc4ed5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1f4b41ce-ea38-4636-ad62-587e4fdc4ed5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1f4b41ce-ea38-4636-ad62-587e4fdc4ed5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-275401cb-5942-41fd-9dc8-f7a1c9f8e898\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-275401cb-5942-41fd-9dc8-f7a1c9f8e898')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-275401cb-5942-41fd-9dc8-f7a1c9f8e898 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "relative_velocity_df",
              "summary": "{\n  \"name\": \"relative_velocity_df\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"kilometers_per_second\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"10.5301930797\",\n          \"14.1476285389\",\n          \"15.3033181047\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"kilometers_per_hour\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"37908.6950867929\",\n          \"50931.4627401365\",\n          \"55091.9451769682\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"miles_per_hour\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"23554.988899902\",\n          \"31646.8302787254\",\n          \"34231.9922684334\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "oVNcOj_GI0OR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "miss_distance_df = pd.json_normalize(df['miss_distance'])\n",
        "miss_distance_df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "n16jOOkEIxw9",
        "outputId": "5d327b42-8c95-4167-81ae-f70f5670318e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   astronomical          lunar          kilometers                miles\n",
              "0  0.1598481563  62.1809328007  23912943.705907081  14858814.2064804778\n",
              "1  0.1746465265  67.9374988085  26126748.367298555   16234408.635907859"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ffa81bb8-f5e0-4ed3-a216-ad97dd4d4b63\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>astronomical</th>\n",
              "      <th>lunar</th>\n",
              "      <th>kilometers</th>\n",
              "      <th>miles</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.1598481563</td>\n",
              "      <td>62.1809328007</td>\n",
              "      <td>23912943.705907081</td>\n",
              "      <td>14858814.2064804778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.1746465265</td>\n",
              "      <td>67.9374988085</td>\n",
              "      <td>26126748.367298555</td>\n",
              "      <td>16234408.635907859</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffa81bb8-f5e0-4ed3-a216-ad97dd4d4b63')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ffa81bb8-f5e0-4ed3-a216-ad97dd4d4b63 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ffa81bb8-f5e0-4ed3-a216-ad97dd4d4b63');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-792ef98d-9fd0-4a0a-8b97-d8eaa68aaffb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-792ef98d-9fd0-4a0a-8b97-d8eaa68aaffb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-792ef98d-9fd0-4a0a-8b97-d8eaa68aaffb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "miss_distance_df",
              "summary": "{\n  \"name\": \"miss_distance_df\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"astronomical\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"0.066009367\",\n          \"0.4726089822\",\n          \"0.1598481563\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lunar\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"25.677643763\",\n          \"183.8448940758\",\n          \"62.1809328007\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"kilometers\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"9874860.70324829\",\n          \"70701297.079987914\",\n          \"23912943.705907081\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"miles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"6135953.913034802\",\n          \"43931748.8632406532\",\n          \"14858814.2064804778\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "asteroid_df = pd.concat(\n",
        "    [df, relative_velocity_df, miss_distance_df], axis=1)\n",
        "asteroid_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "WSm3zb-QI4KA",
        "outputId": "ecc8567d-f64d-46cb-9d05-7b95bdb786fd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                name        id neo_reference_id  \\\n",
              "0  417264 (2006 AT2)   2417264          2417264   \n",
              "1       (2016 CO246)   3743897          3743897   \n",
              "2        (2016 TA11)   3760491          3760491   \n",
              "3         (2020 OP3)  54049356         54049356   \n",
              "4         (2020 RS9)  54054459         54054459   \n",
              "\n",
              "                                                link  \\\n",
              "0  http://api.nasa.gov/neo/rest/v1/neo/2417264?ap...   \n",
              "1  http://api.nasa.gov/neo/rest/v1/neo/3743897?ap...   \n",
              "2  http://api.nasa.gov/neo/rest/v1/neo/3760491?ap...   \n",
              "3  http://api.nasa.gov/neo/rest/v1/neo/54049356?a...   \n",
              "4  http://api.nasa.gov/neo/rest/v1/neo/54054459?a...   \n",
              "\n",
              "                                        nasa_jpl_url  absolute_magnitude_h  \\\n",
              "0  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 17.13   \n",
              "1  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 25.80   \n",
              "2  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 27.10   \n",
              "3  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 20.96   \n",
              "4  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                 23.90   \n",
              "\n",
              "   is_sentry_object  is_potentially_hazardous_asteroid     diameter  \\\n",
              "0             False                              False  2228.640296   \n",
              "1             False                              False    41.118757   \n",
              "2             False                              False    22.596438   \n",
              "3             False                               True   381.979432   \n",
              "4             False                              False    98.637028   \n",
              "\n",
              "  close_approach_date  ...                                  relative_velocity  \\\n",
              "0          2024-02-21  ...  {'kilometers_per_second': '15.3033181047', 'ki...   \n",
              "1          2024-02-21  ...  {'kilometers_per_second': '9.7828523536', 'kil...   \n",
              "2          2024-02-21  ...  {'kilometers_per_second': '11.7367782563', 'ki...   \n",
              "3          2024-02-21  ...  {'kilometers_per_second': '23.477571714', 'kil...   \n",
              "4          2024-02-21  ...  {'kilometers_per_second': '15.6901253766', 'ki...   \n",
              "\n",
              "                                       miss_distance orbiting_body  \\\n",
              "0  {'astronomical': '0.1598481563', 'lunar': '62....         Earth   \n",
              "1  {'astronomical': '0.1746465265', 'lunar': '67....         Earth   \n",
              "2  {'astronomical': '0.1327095376', 'lunar': '51....         Earth   \n",
              "3  {'astronomical': '0.4311950044', 'lunar': '167...         Earth   \n",
              "4  {'astronomical': '0.2771224704', 'lunar': '107...         Earth   \n",
              "\n",
              "  kilometers_per_second kilometers_per_hour    miles_per_hour  astronomical  \\\n",
              "0         15.3033181047    55091.9451769682  34231.9922684334  0.1598481563   \n",
              "1          9.7828523536    35218.2684729236  21883.2624297452  0.1746465265   \n",
              "2         11.7367782563    42252.4017225025  26253.9992814072  0.1327095376   \n",
              "3          23.477571714    84519.2581704389  52516.9801670708  0.4311950044   \n",
              "4         15.6901253766    56484.4513558151  35097.2414549508  0.2771224704   \n",
              "\n",
              "            lunar          kilometers                miles  \n",
              "0   62.1809328007  23912943.705907081  14858814.2064804778  \n",
              "1   67.9374988085  26126748.367298555   16234408.635907859  \n",
              "2   51.6240101264  19853064.153644912  12336122.0314953056  \n",
              "3  167.7348567116  64505854.212880628  40082079.1771755464  \n",
              "4  107.8006409856  41456931.300978048  25760142.5967431424  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1c53cf95-013b-41e9-a340-13a6cc8f3531\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>id</th>\n",
              "      <th>neo_reference_id</th>\n",
              "      <th>link</th>\n",
              "      <th>nasa_jpl_url</th>\n",
              "      <th>absolute_magnitude_h</th>\n",
              "      <th>is_sentry_object</th>\n",
              "      <th>is_potentially_hazardous_asteroid</th>\n",
              "      <th>diameter</th>\n",
              "      <th>close_approach_date</th>\n",
              "      <th>...</th>\n",
              "      <th>relative_velocity</th>\n",
              "      <th>miss_distance</th>\n",
              "      <th>orbiting_body</th>\n",
              "      <th>kilometers_per_second</th>\n",
              "      <th>kilometers_per_hour</th>\n",
              "      <th>miles_per_hour</th>\n",
              "      <th>astronomical</th>\n",
              "      <th>lunar</th>\n",
              "      <th>kilometers</th>\n",
              "      <th>miles</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>417264 (2006 AT2)</td>\n",
              "      <td>2417264</td>\n",
              "      <td>2417264</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/2417264?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>17.13</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2228.640296</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>...</td>\n",
              "      <td>{'kilometers_per_second': '15.3033181047', 'ki...</td>\n",
              "      <td>{'astronomical': '0.1598481563', 'lunar': '62....</td>\n",
              "      <td>Earth</td>\n",
              "      <td>15.3033181047</td>\n",
              "      <td>55091.9451769682</td>\n",
              "      <td>34231.9922684334</td>\n",
              "      <td>0.1598481563</td>\n",
              "      <td>62.1809328007</td>\n",
              "      <td>23912943.705907081</td>\n",
              "      <td>14858814.2064804778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(2016 CO246)</td>\n",
              "      <td>3743897</td>\n",
              "      <td>3743897</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/3743897?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.80</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41.118757</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>...</td>\n",
              "      <td>{'kilometers_per_second': '9.7828523536', 'kil...</td>\n",
              "      <td>{'astronomical': '0.1746465265', 'lunar': '67....</td>\n",
              "      <td>Earth</td>\n",
              "      <td>9.7828523536</td>\n",
              "      <td>35218.2684729236</td>\n",
              "      <td>21883.2624297452</td>\n",
              "      <td>0.1746465265</td>\n",
              "      <td>67.9374988085</td>\n",
              "      <td>26126748.367298555</td>\n",
              "      <td>16234408.635907859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(2016 TA11)</td>\n",
              "      <td>3760491</td>\n",
              "      <td>3760491</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/3760491?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>27.10</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>22.596438</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>...</td>\n",
              "      <td>{'kilometers_per_second': '11.7367782563', 'ki...</td>\n",
              "      <td>{'astronomical': '0.1327095376', 'lunar': '51....</td>\n",
              "      <td>Earth</td>\n",
              "      <td>11.7367782563</td>\n",
              "      <td>42252.4017225025</td>\n",
              "      <td>26253.9992814072</td>\n",
              "      <td>0.1327095376</td>\n",
              "      <td>51.6240101264</td>\n",
              "      <td>19853064.153644912</td>\n",
              "      <td>12336122.0314953056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(2020 OP3)</td>\n",
              "      <td>54049356</td>\n",
              "      <td>54049356</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54049356?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>20.96</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>381.979432</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>...</td>\n",
              "      <td>{'kilometers_per_second': '23.477571714', 'kil...</td>\n",
              "      <td>{'astronomical': '0.4311950044', 'lunar': '167...</td>\n",
              "      <td>Earth</td>\n",
              "      <td>23.477571714</td>\n",
              "      <td>84519.2581704389</td>\n",
              "      <td>52516.9801670708</td>\n",
              "      <td>0.4311950044</td>\n",
              "      <td>167.7348567116</td>\n",
              "      <td>64505854.212880628</td>\n",
              "      <td>40082079.1771755464</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(2020 RS9)</td>\n",
              "      <td>54054459</td>\n",
              "      <td>54054459</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54054459?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>23.90</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>98.637028</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>...</td>\n",
              "      <td>{'kilometers_per_second': '15.6901253766', 'ki...</td>\n",
              "      <td>{'astronomical': '0.2771224704', 'lunar': '107...</td>\n",
              "      <td>Earth</td>\n",
              "      <td>15.6901253766</td>\n",
              "      <td>56484.4513558151</td>\n",
              "      <td>35097.2414549508</td>\n",
              "      <td>0.2771224704</td>\n",
              "      <td>107.8006409856</td>\n",
              "      <td>41456931.300978048</td>\n",
              "      <td>25760142.5967431424</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c53cf95-013b-41e9-a340-13a6cc8f3531')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1c53cf95-013b-41e9-a340-13a6cc8f3531 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1c53cf95-013b-41e9-a340-13a6cc8f3531');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2ad05503-d53d-4ae6-8f1d-0c1f3ad5f8b6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ad05503-d53d-4ae6-8f1d-0c1f3ad5f8b6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2ad05503-d53d-4ae6-8f1d-0c1f3ad5f8b6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "asteroid_df"
            }
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "asteroid_df = asteroid_df.drop(\n",
        "    ['relative_velocity', 'miss_distance'], axis=1)\n",
        "asteroid_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 769
        },
        "id": "9_iix7aiJHnD",
        "outputId": "fb1d1e73-3f9f-42bf-8015-a2c64e472fd1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 name        id neo_reference_id  \\\n",
              "0   417264 (2006 AT2)   2417264          2417264   \n",
              "1        (2016 CO246)   3743897          3743897   \n",
              "2         (2016 TA11)   3760491          3760491   \n",
              "3          (2020 OP3)  54049356         54049356   \n",
              "4          (2020 RS9)  54054459         54054459   \n",
              "5          (2021 PK4)  54179306         54179306   \n",
              "6          (2021 QE5)  54191344         54191344   \n",
              "7          (2022 GE3)  54269715         54269715   \n",
              "8          (2022 OK5)  54292690         54292690   \n",
              "9          (2022 QB8)  54298995         54298995   \n",
              "10        (2023 RA10)  54383282         54383282   \n",
              "11         (2023 SO5)  54387143         54387143   \n",
              "12         (2024 CL5)  54426744         54426744   \n",
              "13         (2024 DM1)  54428356         54428356   \n",
              "\n",
              "                                                 link  \\\n",
              "0   http://api.nasa.gov/neo/rest/v1/neo/2417264?ap...   \n",
              "1   http://api.nasa.gov/neo/rest/v1/neo/3743897?ap...   \n",
              "2   http://api.nasa.gov/neo/rest/v1/neo/3760491?ap...   \n",
              "3   http://api.nasa.gov/neo/rest/v1/neo/54049356?a...   \n",
              "4   http://api.nasa.gov/neo/rest/v1/neo/54054459?a...   \n",
              "5   http://api.nasa.gov/neo/rest/v1/neo/54179306?a...   \n",
              "6   http://api.nasa.gov/neo/rest/v1/neo/54191344?a...   \n",
              "7   http://api.nasa.gov/neo/rest/v1/neo/54269715?a...   \n",
              "8   http://api.nasa.gov/neo/rest/v1/neo/54292690?a...   \n",
              "9   http://api.nasa.gov/neo/rest/v1/neo/54298995?a...   \n",
              "10  http://api.nasa.gov/neo/rest/v1/neo/54383282?a...   \n",
              "11  http://api.nasa.gov/neo/rest/v1/neo/54387143?a...   \n",
              "12  http://api.nasa.gov/neo/rest/v1/neo/54426744?a...   \n",
              "13  http://api.nasa.gov/neo/rest/v1/neo/54428356?a...   \n",
              "\n",
              "                                         nasa_jpl_url  absolute_magnitude_h  \\\n",
              "0   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                17.130   \n",
              "1   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                25.800   \n",
              "2   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                27.100   \n",
              "3   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                20.960   \n",
              "4   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                23.900   \n",
              "5   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                28.190   \n",
              "6   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                22.150   \n",
              "7   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                23.130   \n",
              "8   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                23.250   \n",
              "9   https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                25.850   \n",
              "10  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                28.800   \n",
              "11  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                25.870   \n",
              "12  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                25.950   \n",
              "13  https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...                26.948   \n",
              "\n",
              "    is_sentry_object  is_potentially_hazardous_asteroid     diameter  \\\n",
              "0              False                              False  2228.640296   \n",
              "1              False                              False    41.118757   \n",
              "2              False                              False    22.596438   \n",
              "3              False                               True   381.979432   \n",
              "4              False                              False    98.637028   \n",
              "5              False                              False    13.678547   \n",
              "6              False                              False   220.820800   \n",
              "7              False                              False   140.617696   \n",
              "8              False                              False   133.057690   \n",
              "9              False                              False    40.182780   \n",
              "10             False                              False    10.328565   \n",
              "11             False                              False    39.814382   \n",
              "12             False                              False    38.374257   \n",
              "13             False                              False    24.234830   \n",
              "\n",
              "   close_approach_date close_approach_date_full  epoch_date_close_approach  \\\n",
              "0           2024-02-21        2024-Feb-21 10:10              1708510200000   \n",
              "1           2024-02-21        2024-Feb-21 18:35              1708540500000   \n",
              "2           2024-02-21        2024-Feb-21 19:12              1708542720000   \n",
              "3           2024-02-21        2024-Feb-21 08:46              1708505160000   \n",
              "4           2024-02-21        2024-Feb-21 08:57              1708505820000   \n",
              "5           2024-02-21        2024-Feb-21 23:38              1708558680000   \n",
              "6           2024-02-21        2024-Feb-21 00:18              1708474680000   \n",
              "7           2024-02-21        2024-Feb-21 21:17              1708550220000   \n",
              "8           2024-02-21        2024-Feb-21 17:25              1708536300000   \n",
              "9           2024-02-21        2024-Feb-21 21:32              1708551120000   \n",
              "10          2024-02-21        2024-Feb-21 21:15              1708550100000   \n",
              "11          2024-02-21        2024-Feb-21 03:52              1708487520000   \n",
              "12          2024-02-21        2024-Feb-21 15:19              1708528740000   \n",
              "13          2024-02-21        2024-Feb-21 05:15              1708492500000   \n",
              "\n",
              "   orbiting_body kilometers_per_second kilometers_per_hour    miles_per_hour  \\\n",
              "0          Earth         15.3033181047    55091.9451769682  34231.9922684334   \n",
              "1          Earth          9.7828523536    35218.2684729236  21883.2624297452   \n",
              "2          Earth         11.7367782563    42252.4017225025  26253.9992814072   \n",
              "3          Earth          23.477571714    84519.2581704389  52516.9801670708   \n",
              "4          Earth         15.6901253766    56484.4513558151  35097.2414549508   \n",
              "5          Earth         16.1847655803    58265.1560891282   36203.702126603   \n",
              "6          Earth         10.0062392116    36022.4611618234  22382.9564924674   \n",
              "7          Earth          6.9591742967    25053.0274679846  15566.9769842041   \n",
              "8          Earth         29.8338213427   107401.7568338154  66735.2749615449   \n",
              "9          Earth         10.5301930797    37908.6950867929   23554.988899902   \n",
              "10         Earth          4.9097777682    17675.1999655482  10982.6818897041   \n",
              "11         Earth         14.1476285389    50931.4627401365  31646.8302787254   \n",
              "12         Earth         13.9660950643    50277.9422313925  31240.7580492783   \n",
              "13         Earth          7.4818170615    26934.5414212548  16736.0765847791   \n",
              "\n",
              "    astronomical           lunar          kilometers                miles  \n",
              "0   0.1598481563   62.1809328007  23912943.705907081  14858814.2064804778  \n",
              "1   0.1746465265   67.9374988085  26126748.367298555   16234408.635907859  \n",
              "2   0.1327095376   51.6240101264  19853064.153644912  12336122.0314953056  \n",
              "3   0.4311950044  167.7348567116  64505854.212880628  40082079.1771755464  \n",
              "4   0.2771224704  107.8006409856  41456931.300978048  25760142.5967431424  \n",
              "5   0.1848144716   71.8928294524  27647851.296535492  17179578.1680421096  \n",
              "6   0.1665679914   64.7949486546  24918216.723618318  15483461.8943880684  \n",
              "7   0.2338046686   90.9500160854  34976680.418615882  21733501.4162758916  \n",
              "8   0.4691880974  182.5141698886  70189540.000392538  43613757.7594235044  \n",
              "9    0.066009367    25.677643763    9874860.70324829    6135953.913034802  \n",
              "10  0.1107368194   43.0766227466  16565992.312814678  10293630.3012034364  \n",
              "11  0.4726089822  183.8448940758  70701297.079987914  43931748.8632406532  \n",
              "12  0.0122088338    4.7492363482   1826415.531664006   1134881.9861990428  \n",
              "13  0.0223399431    8.6902378659   3342007.903681197   2076627.4168546386  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd18bf0e-022f-4566-bb17-ed114099f43f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>id</th>\n",
              "      <th>neo_reference_id</th>\n",
              "      <th>link</th>\n",
              "      <th>nasa_jpl_url</th>\n",
              "      <th>absolute_magnitude_h</th>\n",
              "      <th>is_sentry_object</th>\n",
              "      <th>is_potentially_hazardous_asteroid</th>\n",
              "      <th>diameter</th>\n",
              "      <th>close_approach_date</th>\n",
              "      <th>close_approach_date_full</th>\n",
              "      <th>epoch_date_close_approach</th>\n",
              "      <th>orbiting_body</th>\n",
              "      <th>kilometers_per_second</th>\n",
              "      <th>kilometers_per_hour</th>\n",
              "      <th>miles_per_hour</th>\n",
              "      <th>astronomical</th>\n",
              "      <th>lunar</th>\n",
              "      <th>kilometers</th>\n",
              "      <th>miles</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>417264 (2006 AT2)</td>\n",
              "      <td>2417264</td>\n",
              "      <td>2417264</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/2417264?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>17.130</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2228.640296</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 10:10</td>\n",
              "      <td>1708510200000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>15.3033181047</td>\n",
              "      <td>55091.9451769682</td>\n",
              "      <td>34231.9922684334</td>\n",
              "      <td>0.1598481563</td>\n",
              "      <td>62.1809328007</td>\n",
              "      <td>23912943.705907081</td>\n",
              "      <td>14858814.2064804778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(2016 CO246)</td>\n",
              "      <td>3743897</td>\n",
              "      <td>3743897</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/3743897?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.800</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41.118757</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 18:35</td>\n",
              "      <td>1708540500000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>9.7828523536</td>\n",
              "      <td>35218.2684729236</td>\n",
              "      <td>21883.2624297452</td>\n",
              "      <td>0.1746465265</td>\n",
              "      <td>67.9374988085</td>\n",
              "      <td>26126748.367298555</td>\n",
              "      <td>16234408.635907859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(2016 TA11)</td>\n",
              "      <td>3760491</td>\n",
              "      <td>3760491</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/3760491?ap...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>27.100</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>22.596438</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 19:12</td>\n",
              "      <td>1708542720000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>11.7367782563</td>\n",
              "      <td>42252.4017225025</td>\n",
              "      <td>26253.9992814072</td>\n",
              "      <td>0.1327095376</td>\n",
              "      <td>51.6240101264</td>\n",
              "      <td>19853064.153644912</td>\n",
              "      <td>12336122.0314953056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(2020 OP3)</td>\n",
              "      <td>54049356</td>\n",
              "      <td>54049356</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54049356?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>20.960</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>381.979432</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 08:46</td>\n",
              "      <td>1708505160000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>23.477571714</td>\n",
              "      <td>84519.2581704389</td>\n",
              "      <td>52516.9801670708</td>\n",
              "      <td>0.4311950044</td>\n",
              "      <td>167.7348567116</td>\n",
              "      <td>64505854.212880628</td>\n",
              "      <td>40082079.1771755464</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(2020 RS9)</td>\n",
              "      <td>54054459</td>\n",
              "      <td>54054459</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54054459?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>23.900</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>98.637028</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 08:57</td>\n",
              "      <td>1708505820000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>15.6901253766</td>\n",
              "      <td>56484.4513558151</td>\n",
              "      <td>35097.2414549508</td>\n",
              "      <td>0.2771224704</td>\n",
              "      <td>107.8006409856</td>\n",
              "      <td>41456931.300978048</td>\n",
              "      <td>25760142.5967431424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>(2021 PK4)</td>\n",
              "      <td>54179306</td>\n",
              "      <td>54179306</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54179306?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>28.190</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>13.678547</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 23:38</td>\n",
              "      <td>1708558680000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>16.1847655803</td>\n",
              "      <td>58265.1560891282</td>\n",
              "      <td>36203.702126603</td>\n",
              "      <td>0.1848144716</td>\n",
              "      <td>71.8928294524</td>\n",
              "      <td>27647851.296535492</td>\n",
              "      <td>17179578.1680421096</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>(2021 QE5)</td>\n",
              "      <td>54191344</td>\n",
              "      <td>54191344</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54191344?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>22.150</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>220.820800</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 00:18</td>\n",
              "      <td>1708474680000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>10.0062392116</td>\n",
              "      <td>36022.4611618234</td>\n",
              "      <td>22382.9564924674</td>\n",
              "      <td>0.1665679914</td>\n",
              "      <td>64.7949486546</td>\n",
              "      <td>24918216.723618318</td>\n",
              "      <td>15483461.8943880684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>(2022 GE3)</td>\n",
              "      <td>54269715</td>\n",
              "      <td>54269715</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54269715?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>23.130</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>140.617696</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 21:17</td>\n",
              "      <td>1708550220000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>6.9591742967</td>\n",
              "      <td>25053.0274679846</td>\n",
              "      <td>15566.9769842041</td>\n",
              "      <td>0.2338046686</td>\n",
              "      <td>90.9500160854</td>\n",
              "      <td>34976680.418615882</td>\n",
              "      <td>21733501.4162758916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>(2022 OK5)</td>\n",
              "      <td>54292690</td>\n",
              "      <td>54292690</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54292690?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>23.250</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>133.057690</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 17:25</td>\n",
              "      <td>1708536300000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>29.8338213427</td>\n",
              "      <td>107401.7568338154</td>\n",
              "      <td>66735.2749615449</td>\n",
              "      <td>0.4691880974</td>\n",
              "      <td>182.5141698886</td>\n",
              "      <td>70189540.000392538</td>\n",
              "      <td>43613757.7594235044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>(2022 QB8)</td>\n",
              "      <td>54298995</td>\n",
              "      <td>54298995</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54298995?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.850</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>40.182780</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 21:32</td>\n",
              "      <td>1708551120000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>10.5301930797</td>\n",
              "      <td>37908.6950867929</td>\n",
              "      <td>23554.988899902</td>\n",
              "      <td>0.066009367</td>\n",
              "      <td>25.677643763</td>\n",
              "      <td>9874860.70324829</td>\n",
              "      <td>6135953.913034802</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>(2023 RA10)</td>\n",
              "      <td>54383282</td>\n",
              "      <td>54383282</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54383282?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>28.800</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>10.328565</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 21:15</td>\n",
              "      <td>1708550100000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>4.9097777682</td>\n",
              "      <td>17675.1999655482</td>\n",
              "      <td>10982.6818897041</td>\n",
              "      <td>0.1107368194</td>\n",
              "      <td>43.0766227466</td>\n",
              "      <td>16565992.312814678</td>\n",
              "      <td>10293630.3012034364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>(2023 SO5)</td>\n",
              "      <td>54387143</td>\n",
              "      <td>54387143</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54387143?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.870</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>39.814382</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 03:52</td>\n",
              "      <td>1708487520000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>14.1476285389</td>\n",
              "      <td>50931.4627401365</td>\n",
              "      <td>31646.8302787254</td>\n",
              "      <td>0.4726089822</td>\n",
              "      <td>183.8448940758</td>\n",
              "      <td>70701297.079987914</td>\n",
              "      <td>43931748.8632406532</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>(2024 CL5)</td>\n",
              "      <td>54426744</td>\n",
              "      <td>54426744</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54426744?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>25.950</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>38.374257</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 15:19</td>\n",
              "      <td>1708528740000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>13.9660950643</td>\n",
              "      <td>50277.9422313925</td>\n",
              "      <td>31240.7580492783</td>\n",
              "      <td>0.0122088338</td>\n",
              "      <td>4.7492363482</td>\n",
              "      <td>1826415.531664006</td>\n",
              "      <td>1134881.9861990428</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>(2024 DM1)</td>\n",
              "      <td>54428356</td>\n",
              "      <td>54428356</td>\n",
              "      <td>http://api.nasa.gov/neo/rest/v1/neo/54428356?a...</td>\n",
              "      <td>https://ssd.jpl.nasa.gov/tools/sbdb_lookup.htm...</td>\n",
              "      <td>26.948</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>24.234830</td>\n",
              "      <td>2024-02-21</td>\n",
              "      <td>2024-Feb-21 05:15</td>\n",
              "      <td>1708492500000</td>\n",
              "      <td>Earth</td>\n",
              "      <td>7.4818170615</td>\n",
              "      <td>26934.5414212548</td>\n",
              "      <td>16736.0765847791</td>\n",
              "      <td>0.0223399431</td>\n",
              "      <td>8.6902378659</td>\n",
              "      <td>3342007.903681197</td>\n",
              "      <td>2076627.4168546386</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd18bf0e-022f-4566-bb17-ed114099f43f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dd18bf0e-022f-4566-bb17-ed114099f43f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dd18bf0e-022f-4566-bb17-ed114099f43f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-be0275c7-6dd5-4a98-94f1-588ffe279bd5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be0275c7-6dd5-4a98-94f1-588ffe279bd5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-be0275c7-6dd5-4a98-94f1-588ffe279bd5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_0edbb104-056c-4211-88a8-ce7ddb46f32e\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('asteroid_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0edbb104-056c-4211-88a8-ce7ddb46f32e button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('asteroid_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "asteroid_df",
              "repr_error": "'str' object has no attribute 'empty'"
            }
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# question 1: number of asteroids for this day\n",
        "num_asteroids = len(asteroid_df)\n",
        "print(f\"Number of asteroids on {start_date}: {num_asteroids}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MmduYkjGJYRS",
        "outputId": "2a70519e-8696-44d6-de47-0fce41233d3f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of asteroids on 2024-02-21: 14\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# question 2: largest asteroid based on diameter\n",
        "largest_asteroid = asteroid_df.loc[asteroid_df['diameter'].idxmax()]\n",
        "print(f\"Largest asteroid: {largest_asteroid['name']} (Diameter: {largest_asteroid['diameter']} meters)\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "21jX_PorJeFr",
        "outputId": "d515f284-a15f-426c-992e-ddba5963c6f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Largest asteroid: 417264 (2006 AT2) (Diameter: 2228.6402962644 meters)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Adding Visualizations\n",
        "\n",
        "As part of EDA, we will add certain visualization."
      ],
      "metadata": {
        "id": "DEZkTIIeKmPW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "kU1wviptKsLb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.histplot(data=asteroid_df, x=\"diameter\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "cCywyU_XJ0j9",
        "outputId": "7d865335-6f48-40d9-d903-d0b93479e9c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='diameter', ylabel='Count'>"
            ]
          },
          "metadata": {},
          "execution_count": 105
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.histplot(data=asteroid_df, x=\"diameter\", hue=\"is_potentially_hazardous_asteroid\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "rhW76sREKzzQ",
        "outputId": "d6793f8e-7975-4ed4-fbdb-a081e411823a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='diameter', ylabel='Count'>"
            ]
          },
          "metadata": {},
          "execution_count": 106
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(data=asteroid_df, x=\"is_potentially_hazardous_asteroid\", y=\"diameter\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "TcaNnAIWK_QP",
        "outputId": "099cb90f-4ce5-404a-f7a5-5fc7be3311ba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='is_potentially_hazardous_asteroid', ylabel='diameter'>"
            ]
          },
          "metadata": {},
          "execution_count": 107
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(data=asteroid_df, x=\"diameter\", y=\"name\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "RLlix5ZsLaMC",
        "outputId": "34804dfc-cd38-4e0c-ff40-45140e617450"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='diameter', ylabel='name'>"
            ]
          },
          "metadata": {},
          "execution_count": 113
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(data=asteroid_df, x=\"diameter\", y=\"name\", hue=\"is_potentially_hazardous_asteroid\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "BdItcDP6LtGn",
        "outputId": "76c6a844-e295-4ea9-b638-fb616cc136aa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='diameter', ylabel='name'>"
            ]
          },
          "metadata": {},
          "execution_count": 114
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "ordered_df = asteroid_df.sort_values(by=['close_approach_date_full'])\n",
        "sns.scatterplot(\n",
        "    data=ordered_df, x='close_approach_date_full', y='name', hue='is_potentially_hazardous_asteroid', size='diameter')\n",
        "plt.xticks(rotation=90)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 876
        },
        "id": "qCNJcu7HLw4N",
        "outputId": "da754024-9bb5-4dcd-f905-6f688da44fea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n",
              " [Text(0, 0, '2024-Feb-21 00:18'),\n",
              "  Text(1, 0, '2024-Feb-21 03:52'),\n",
              "  Text(2, 0, '2024-Feb-21 05:15'),\n",
              "  Text(3, 0, '2024-Feb-21 08:46'),\n",
              "  Text(4, 0, '2024-Feb-21 08:57'),\n",
              "  Text(5, 0, '2024-Feb-21 10:10'),\n",
              "  Text(6, 0, '2024-Feb-21 15:19'),\n",
              "  Text(7, 0, '2024-Feb-21 17:25'),\n",
              "  Text(8, 0, '2024-Feb-21 18:35'),\n",
              "  Text(9, 0, '2024-Feb-21 19:12'),\n",
              "  Text(10, 0, '2024-Feb-21 21:15'),\n",
              "  Text(11, 0, '2024-Feb-21 21:17'),\n",
              "  Text(12, 0, '2024-Feb-21 21:32'),\n",
              "  Text(13, 0, '2024-Feb-21 23:38')])"
            ]
          },
          "metadata": {},
          "execution_count": 123
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Downloading dataset for multiple days in a year\n",
        "\n",
        "For this we need to iterate over the days in the year and then download the data."
      ],
      "metadata": {
        "id": "BY4WwTheYPC1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "start_date = '2023-01-01'\n",
        "end_date = '2024-01-01'\n",
        "output_dir = 'drive/MyDrive/Terminal34/asteroid-time-series'"
      ],
      "metadata": {
        "id": "Xhf0iRLgY-9L"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# create output directory\n",
        "os.makedirs(output_dir, exist_ok=True)"
      ],
      "metadata": {
        "id": "xT6n-sD-aa9e"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "daterange = pd.date_range(start_date, end_date)\n",
        "daterange"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5u866ZxVYpaE",
        "outputId": "19327385-c255-49f3-d423-59bc4288b30e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DatetimeIndex(['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04',\n",
              "               '2023-01-05', '2023-01-06', '2023-01-07', '2023-01-08',\n",
              "               '2023-01-09', '2023-01-10',\n",
              "               ...\n",
              "               '2023-12-23', '2023-12-24', '2023-12-25', '2023-12-26',\n",
              "               '2023-12-27', '2023-12-28', '2023-12-29', '2023-12-30',\n",
              "               '2023-12-31', '2024-01-01'],\n",
              "              dtype='datetime64[ns]', length=366, freq='D')"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def download_data(single_start_date, single_end_date, api_key, output_dir):\n",
        "\n",
        "    # set url\n",
        "    url = 'https://api.nasa.gov/neo/rest/v1/feed?' + \\\n",
        "      f'start_date={single_start_date}&end_date={single_end_date}&api_key={api_key}'\n",
        "\n",
        "    # download data, and save to json\n",
        "    output_filename = os.path.join(\n",
        "        output_dir, f'{single_start_date}_{single_end_date}.json')\n",
        "\n",
        "    # if file does not exist, download the data and store the file\n",
        "    if not os.path.isfile(output_filename):\n",
        "\n",
        "        response = requests.get(url)\n",
        "\n",
        "        if response.status_code == 200:\n",
        "\n",
        "          # get json output\n",
        "          data = response.json()  # Parse JSON Data\n",
        "          print('Downloaded data correctly.')\n",
        "\n",
        "          # save json file\n",
        "          with open(output_filename, 'w') as outfile:\n",
        "            json.dump(data, outfile)\n",
        "        else:\n",
        "          print('Failed to retrieve data. Please check your API key and internet connection.')\n",
        "\n",
        "    return"
      ],
      "metadata": {
        "id": "7SNqj12MZsy3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for single_date in daterange:\n",
        "\n",
        "    single_start_date = single_date.strftime(\"%Y-%m-%d\")\n",
        "    single_end_date = (single_date + datetime.timedelta(1)).strftime(\"%Y-%m-%d\")\n",
        "\n",
        "    print(f'Downloading data for {single_start_date} to {single_end_date}')\n",
        "\n",
        "    download_data(single_start_date, single_end_date, api_key, output_dir)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vu5OyFUfZG4J",
        "outputId": "b6b2659a-77fb-48bd-e572-fb62e64388fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data for 2023-01-01 to 2023-01-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-02 to 2023-01-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-03 to 2023-01-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-04 to 2023-01-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-05 to 2023-01-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-06 to 2023-01-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-07 to 2023-01-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-08 to 2023-01-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-09 to 2023-01-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-10 to 2023-01-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-11 to 2023-01-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-12 to 2023-01-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-13 to 2023-01-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-14 to 2023-01-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-15 to 2023-01-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-16 to 2023-01-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-17 to 2023-01-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-18 to 2023-01-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-19 to 2023-01-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-20 to 2023-01-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-21 to 2023-01-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-22 to 2023-01-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-23 to 2023-01-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-24 to 2023-01-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-25 to 2023-01-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-26 to 2023-01-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-27 to 2023-01-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-28 to 2023-01-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-29 to 2023-01-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-30 to 2023-01-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-01-31 to 2023-02-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-01 to 2023-02-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-02 to 2023-02-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-03 to 2023-02-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-04 to 2023-02-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-05 to 2023-02-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-06 to 2023-02-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-07 to 2023-02-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-08 to 2023-02-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-09 to 2023-02-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-10 to 2023-02-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-11 to 2023-02-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-12 to 2023-02-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-13 to 2023-02-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-14 to 2023-02-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-15 to 2023-02-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-16 to 2023-02-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-17 to 2023-02-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-18 to 2023-02-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-19 to 2023-02-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-20 to 2023-02-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-21 to 2023-02-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-22 to 2023-02-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-23 to 2023-02-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-24 to 2023-02-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-25 to 2023-02-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-26 to 2023-02-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-27 to 2023-02-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-02-28 to 2023-03-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-01 to 2023-03-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-02 to 2023-03-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-03 to 2023-03-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-04 to 2023-03-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-05 to 2023-03-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-06 to 2023-03-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-07 to 2023-03-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-08 to 2023-03-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-09 to 2023-03-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-10 to 2023-03-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-11 to 2023-03-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-12 to 2023-03-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-13 to 2023-03-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-14 to 2023-03-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-15 to 2023-03-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-16 to 2023-03-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-17 to 2023-03-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-18 to 2023-03-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-19 to 2023-03-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-20 to 2023-03-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-21 to 2023-03-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-22 to 2023-03-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-23 to 2023-03-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-24 to 2023-03-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-25 to 2023-03-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-26 to 2023-03-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-27 to 2023-03-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-28 to 2023-03-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-29 to 2023-03-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-30 to 2023-03-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-03-31 to 2023-04-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-01 to 2023-04-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-02 to 2023-04-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-03 to 2023-04-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-04 to 2023-04-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-05 to 2023-04-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-06 to 2023-04-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-07 to 2023-04-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-08 to 2023-04-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-09 to 2023-04-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-10 to 2023-04-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-11 to 2023-04-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-12 to 2023-04-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-13 to 2023-04-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-14 to 2023-04-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-15 to 2023-04-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-16 to 2023-04-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-17 to 2023-04-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-18 to 2023-04-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-19 to 2023-04-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-20 to 2023-04-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-21 to 2023-04-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-22 to 2023-04-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-23 to 2023-04-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-24 to 2023-04-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-25 to 2023-04-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-26 to 2023-04-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-27 to 2023-04-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-28 to 2023-04-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-29 to 2023-04-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-04-30 to 2023-05-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-01 to 2023-05-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-02 to 2023-05-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-03 to 2023-05-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-04 to 2023-05-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-05 to 2023-05-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-06 to 2023-05-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-07 to 2023-05-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-08 to 2023-05-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-09 to 2023-05-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-10 to 2023-05-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-11 to 2023-05-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-12 to 2023-05-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-13 to 2023-05-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-14 to 2023-05-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-15 to 2023-05-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-16 to 2023-05-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-17 to 2023-05-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-18 to 2023-05-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-19 to 2023-05-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-20 to 2023-05-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-21 to 2023-05-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-22 to 2023-05-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-23 to 2023-05-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-24 to 2023-05-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-25 to 2023-05-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-26 to 2023-05-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-27 to 2023-05-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-28 to 2023-05-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-29 to 2023-05-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-30 to 2023-05-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-05-31 to 2023-06-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-01 to 2023-06-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-02 to 2023-06-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-03 to 2023-06-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-04 to 2023-06-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-05 to 2023-06-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-06 to 2023-06-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-07 to 2023-06-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-08 to 2023-06-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-09 to 2023-06-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-10 to 2023-06-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-11 to 2023-06-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-12 to 2023-06-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-13 to 2023-06-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-14 to 2023-06-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-15 to 2023-06-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-16 to 2023-06-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-17 to 2023-06-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-18 to 2023-06-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-19 to 2023-06-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-20 to 2023-06-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-21 to 2023-06-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-22 to 2023-06-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-23 to 2023-06-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-24 to 2023-06-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-25 to 2023-06-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-26 to 2023-06-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-27 to 2023-06-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-28 to 2023-06-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-29 to 2023-06-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-06-30 to 2023-07-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-01 to 2023-07-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-02 to 2023-07-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-03 to 2023-07-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-04 to 2023-07-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-05 to 2023-07-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-06 to 2023-07-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-07 to 2023-07-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-08 to 2023-07-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-09 to 2023-07-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-10 to 2023-07-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-11 to 2023-07-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-12 to 2023-07-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-13 to 2023-07-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-14 to 2023-07-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-15 to 2023-07-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-16 to 2023-07-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-17 to 2023-07-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-18 to 2023-07-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-19 to 2023-07-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-20 to 2023-07-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-21 to 2023-07-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-22 to 2023-07-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-23 to 2023-07-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-24 to 2023-07-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-25 to 2023-07-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-26 to 2023-07-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-27 to 2023-07-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-28 to 2023-07-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-29 to 2023-07-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-30 to 2023-07-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-07-31 to 2023-08-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-01 to 2023-08-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-02 to 2023-08-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-03 to 2023-08-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-04 to 2023-08-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-05 to 2023-08-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-06 to 2023-08-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-07 to 2023-08-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-08 to 2023-08-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-09 to 2023-08-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-10 to 2023-08-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-11 to 2023-08-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-12 to 2023-08-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-13 to 2023-08-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-14 to 2023-08-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-15 to 2023-08-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-16 to 2023-08-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-17 to 2023-08-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-18 to 2023-08-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-19 to 2023-08-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-20 to 2023-08-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-21 to 2023-08-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-22 to 2023-08-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-23 to 2023-08-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-24 to 2023-08-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-25 to 2023-08-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-26 to 2023-08-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-27 to 2023-08-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-28 to 2023-08-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-29 to 2023-08-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-30 to 2023-08-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-08-31 to 2023-09-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-01 to 2023-09-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-02 to 2023-09-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-03 to 2023-09-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-04 to 2023-09-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-05 to 2023-09-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-06 to 2023-09-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-07 to 2023-09-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-08 to 2023-09-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-09 to 2023-09-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-10 to 2023-09-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-11 to 2023-09-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-12 to 2023-09-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-13 to 2023-09-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-14 to 2023-09-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-15 to 2023-09-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-16 to 2023-09-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-17 to 2023-09-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-18 to 2023-09-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-19 to 2023-09-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-20 to 2023-09-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-21 to 2023-09-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-22 to 2023-09-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-23 to 2023-09-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-24 to 2023-09-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-25 to 2023-09-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-26 to 2023-09-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-27 to 2023-09-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-28 to 2023-09-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-29 to 2023-09-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-09-30 to 2023-10-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-01 to 2023-10-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-02 to 2023-10-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-03 to 2023-10-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-04 to 2023-10-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-05 to 2023-10-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-06 to 2023-10-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-07 to 2023-10-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-08 to 2023-10-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-09 to 2023-10-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-10 to 2023-10-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-11 to 2023-10-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-12 to 2023-10-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-13 to 2023-10-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-14 to 2023-10-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-15 to 2023-10-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-16 to 2023-10-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-17 to 2023-10-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-18 to 2023-10-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-19 to 2023-10-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-20 to 2023-10-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-21 to 2023-10-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-22 to 2023-10-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-23 to 2023-10-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-24 to 2023-10-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-25 to 2023-10-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-26 to 2023-10-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-27 to 2023-10-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-28 to 2023-10-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-29 to 2023-10-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-30 to 2023-10-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-10-31 to 2023-11-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-01 to 2023-11-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-02 to 2023-11-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-03 to 2023-11-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-04 to 2023-11-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-05 to 2023-11-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-06 to 2023-11-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-07 to 2023-11-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-08 to 2023-11-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-09 to 2023-11-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-10 to 2023-11-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-11 to 2023-11-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-12 to 2023-11-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-13 to 2023-11-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-14 to 2023-11-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-15 to 2023-11-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-16 to 2023-11-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-17 to 2023-11-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-18 to 2023-11-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-19 to 2023-11-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-20 to 2023-11-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-21 to 2023-11-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-22 to 2023-11-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-23 to 2023-11-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-24 to 2023-11-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-25 to 2023-11-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-26 to 2023-11-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-27 to 2023-11-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-28 to 2023-11-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-29 to 2023-11-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-11-30 to 2023-12-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-01 to 2023-12-02\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-02 to 2023-12-03\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-03 to 2023-12-04\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-04 to 2023-12-05\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-05 to 2023-12-06\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-06 to 2023-12-07\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-07 to 2023-12-08\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-08 to 2023-12-09\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-09 to 2023-12-10\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-10 to 2023-12-11\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-11 to 2023-12-12\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-12 to 2023-12-13\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-13 to 2023-12-14\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-14 to 2023-12-15\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-15 to 2023-12-16\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-16 to 2023-12-17\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-17 to 2023-12-18\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-18 to 2023-12-19\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-19 to 2023-12-20\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-20 to 2023-12-21\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-21 to 2023-12-22\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-22 to 2023-12-23\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-23 to 2023-12-24\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-24 to 2023-12-25\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-25 to 2023-12-26\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-26 to 2023-12-27\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-27 to 2023-12-28\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-28 to 2023-12-29\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-29 to 2023-12-30\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-30 to 2023-12-31\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2023-12-31 to 2024-01-01\n",
            "Downloaded data correctly.\n",
            "Downloading data for 2024-01-01 to 2024-01-02\n",
            "Downloaded data correctly.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from glob import glob\n",
        "\n",
        "asteroid_filenames = glob(os.path.join(output_dir, '*.json'))\n",
        "len(asteroid_filenames)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j8kPWrpMiXAX",
        "outputId": "dda9be79-8152-45a4-8c71-014049f820da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "366"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "asteroid_df_list = []\n",
        "for asteroid_filename in asteroid_filenames:\n",
        "\n",
        "    # read json file\n",
        "    print(asteroid_filename)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_dVtrSU9if5g",
        "outputId": "b0708c88-0ffe-4a8c-f2b9-8271487a562d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-01_2023-01-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-02_2023-01-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-03_2023-01-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-04_2023-01-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-05_2023-01-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-06_2023-01-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-07_2023-01-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-08_2023-01-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-09_2023-01-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-10_2023-01-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-11_2023-01-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-12_2023-01-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-13_2023-01-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-14_2023-01-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-15_2023-01-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-16_2023-01-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-17_2023-01-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-18_2023-01-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-19_2023-01-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-20_2023-01-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-21_2023-01-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-22_2023-01-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-23_2023-01-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-24_2023-01-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-25_2023-01-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-26_2023-01-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-27_2023-01-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-28_2023-01-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-29_2023-01-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-30_2023-01-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-01-31_2023-02-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-01_2023-02-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-02_2023-02-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-03_2023-02-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-04_2023-02-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-05_2023-02-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-06_2023-02-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-07_2023-02-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-08_2023-02-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-09_2023-02-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-10_2023-02-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-11_2023-02-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-12_2023-02-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-13_2023-02-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-14_2023-02-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-15_2023-02-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-16_2023-02-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-17_2023-02-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-18_2023-02-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-19_2023-02-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-20_2023-02-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-21_2023-02-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-22_2023-02-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-23_2023-02-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-24_2023-02-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-25_2023-02-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-26_2023-02-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-27_2023-02-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-02-28_2023-03-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-01_2023-03-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-02_2023-03-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-03_2023-03-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-04_2023-03-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-05_2023-03-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-06_2023-03-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-07_2023-03-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-08_2023-03-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-09_2023-03-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-10_2023-03-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-11_2023-03-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-12_2023-03-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-13_2023-03-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-14_2023-03-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-15_2023-03-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-16_2023-03-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-17_2023-03-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-18_2023-03-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-19_2023-03-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-20_2023-03-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-21_2023-03-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-22_2023-03-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-23_2023-03-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-24_2023-03-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-25_2023-03-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-26_2023-03-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-27_2023-03-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-28_2023-03-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-29_2023-03-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-30_2023-03-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-03-31_2023-04-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-01_2023-04-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-02_2023-04-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-03_2023-04-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-04_2023-04-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-05_2023-04-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-06_2023-04-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-07_2023-04-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-08_2023-04-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-09_2023-04-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-10_2023-04-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-11_2023-04-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-12_2023-04-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-13_2023-04-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-14_2023-04-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-15_2023-04-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-16_2023-04-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-17_2023-04-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-18_2023-04-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-19_2023-04-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-20_2023-04-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-21_2023-04-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-22_2023-04-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-23_2023-04-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-24_2023-04-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-25_2023-04-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-26_2023-04-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-27_2023-04-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-28_2023-04-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-29_2023-04-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-04-30_2023-05-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-01_2023-05-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-02_2023-05-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-03_2023-05-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-04_2023-05-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-05_2023-05-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-06_2023-05-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-07_2023-05-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-08_2023-05-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-09_2023-05-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-10_2023-05-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-11_2023-05-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-12_2023-05-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-13_2023-05-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-14_2023-05-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-15_2023-05-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-16_2023-05-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-17_2023-05-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-18_2023-05-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-19_2023-05-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-20_2023-05-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-21_2023-05-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-22_2023-05-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-23_2023-05-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-24_2023-05-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-25_2023-05-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-26_2023-05-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-27_2023-05-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-28_2023-05-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-29_2023-05-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-30_2023-05-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-05-31_2023-06-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-01_2023-06-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-02_2023-06-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-03_2023-06-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-04_2023-06-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-05_2023-06-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-06_2023-06-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-07_2023-06-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-08_2023-06-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-09_2023-06-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-10_2023-06-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-11_2023-06-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-12_2023-06-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-13_2023-06-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-14_2023-06-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-15_2023-06-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-16_2023-06-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-17_2023-06-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-18_2023-06-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-19_2023-06-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-20_2023-06-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-21_2023-06-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-22_2023-06-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-23_2023-06-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-24_2023-06-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-25_2023-06-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-26_2023-06-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-27_2023-06-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-28_2023-06-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-29_2023-06-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-06-30_2023-07-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-01_2023-07-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-02_2023-07-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-03_2023-07-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-04_2023-07-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-05_2023-07-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-06_2023-07-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-07_2023-07-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-08_2023-07-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-09_2023-07-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-10_2023-07-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-11_2023-07-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-12_2023-07-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-13_2023-07-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-14_2023-07-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-15_2023-07-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-16_2023-07-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-17_2023-07-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-18_2023-07-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-19_2023-07-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-20_2023-07-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-21_2023-07-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-22_2023-07-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-23_2023-07-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-24_2023-07-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-25_2023-07-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-26_2023-07-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-27_2023-07-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-28_2023-07-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-29_2023-07-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-30_2023-07-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-07-31_2023-08-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-01_2023-08-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-02_2023-08-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-03_2023-08-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-04_2023-08-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-05_2023-08-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-06_2023-08-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-07_2023-08-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-08_2023-08-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-09_2023-08-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-10_2023-08-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-11_2023-08-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-12_2023-08-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-13_2023-08-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-14_2023-08-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-15_2023-08-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-16_2023-08-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-17_2023-08-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-18_2023-08-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-19_2023-08-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-20_2023-08-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-21_2023-08-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-22_2023-08-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-23_2023-08-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-24_2023-08-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-25_2023-08-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-26_2023-08-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-27_2023-08-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-28_2023-08-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-29_2023-08-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-30_2023-08-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-08-31_2023-09-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-01_2023-09-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-02_2023-09-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-03_2023-09-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-04_2023-09-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-05_2023-09-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-06_2023-09-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-07_2023-09-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-08_2023-09-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-09_2023-09-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-10_2023-09-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-11_2023-09-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-12_2023-09-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-13_2023-09-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-14_2023-09-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-15_2023-09-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-16_2023-09-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-17_2023-09-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-18_2023-09-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-19_2023-09-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-20_2023-09-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-21_2023-09-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-22_2023-09-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-23_2023-09-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-24_2023-09-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-25_2023-09-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-26_2023-09-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-27_2023-09-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-28_2023-09-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-29_2023-09-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-09-30_2023-10-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-01_2023-10-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-02_2023-10-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-03_2023-10-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-04_2023-10-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-05_2023-10-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-06_2023-10-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-07_2023-10-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-08_2023-10-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-09_2023-10-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-10_2023-10-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-11_2023-10-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-12_2023-10-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-13_2023-10-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-14_2023-10-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-15_2023-10-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-16_2023-10-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-17_2023-10-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-18_2023-10-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-19_2023-10-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-20_2023-10-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-21_2023-10-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-22_2023-10-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-23_2023-10-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-24_2023-10-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-25_2023-10-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-26_2023-10-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-27_2023-10-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-28_2023-10-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-29_2023-10-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-30_2023-10-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-10-31_2023-11-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-01_2023-11-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-02_2023-11-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-03_2023-11-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-04_2023-11-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-05_2023-11-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-06_2023-11-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-07_2023-11-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-08_2023-11-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-09_2023-11-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-10_2023-11-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-11_2023-11-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-12_2023-11-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-13_2023-11-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-14_2023-11-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-15_2023-11-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-16_2023-11-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-17_2023-11-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-18_2023-11-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-19_2023-11-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-20_2023-11-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-21_2023-11-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-22_2023-11-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-23_2023-11-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-24_2023-11-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-25_2023-11-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-26_2023-11-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-27_2023-11-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-28_2023-11-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-29_2023-11-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-11-30_2023-12-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-01_2023-12-02.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-02_2023-12-03.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-03_2023-12-04.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-04_2023-12-05.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-05_2023-12-06.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-06_2023-12-07.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-07_2023-12-08.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-08_2023-12-09.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-09_2023-12-10.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-10_2023-12-11.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-11_2023-12-12.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-12_2023-12-13.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-13_2023-12-14.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-14_2023-12-15.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-15_2023-12-16.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-16_2023-12-17.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-17_2023-12-18.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-18_2023-12-19.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-19_2023-12-20.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-20_2023-12-21.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-21_2023-12-22.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-22_2023-12-23.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-23_2023-12-24.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-24_2023-12-25.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-25_2023-12-26.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-26_2023-12-27.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-27_2023-12-28.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-28_2023-12-29.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-29_2023-12-30.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-30_2023-12-31.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2023-12-31_2024-01-01.json\n",
            "drive/MyDrive/Terminal34/asteroid-time-series/2024-01-01_2024-01-02.json\n"
          ]
        }
      ]
    }
  ]
}